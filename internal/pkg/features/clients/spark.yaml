openapi: 3.0.1
info:
  title: Spark
  description: Microservice for all things charging{{.Description}}'
  contact:
    name: Ownership Team
    email: CoreSvc-Ownership@xxx.com
  license: {}
  version: v2023.06.hf.28.b3.86353893d4
servers:
  - url: spark-cn.xxxmotors.com
paths:
  /__status__/liveness:
    get:
      tags:
        - üíâ Status Check
      summary: checks to see if application needs to be restarted
      description: checks to see if application needs to be restarted
      operationId: app-liveness
      responses:
        200:
          content: {}
  /__status__/readiness:
    get:
      tags:
        - üíâ Status Check
      summary: checks to see if the applications dependencies are connected properly
      description: checks to see if the applications dependencies are connected properly
      operationId: app-readiness
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Health'
  /admin/ocpi/credential:
    post:
      tags:
        - üë∑ Admin
      summary: register initial TOKEN_A to be used by the calling application in initial
        OCPI flow
      description: pre requisite for OCPI credentials flow
      operationId: register-credential
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.InitCredentialsToken'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: RequestBody
  /admin/ocpi/operator:
    post:
      tags:
        - üë∑ Admin
      summary: link a new operator (MSP) to hub credentials by name
      description: Register a MSP with an already registered hub
      operationId: register-operator
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.InitOperatorLink'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: RequestBody
  /v1/audit/pricing:
    post:
      tags:
        - üï∂Ô∏è Audit Report
      summary: Check site pricing with installbase
      operationId: get-site-pricing
      parameters:
        - name: startSiteID
          in: query
          description: Enter start siteID [chargerdb.site table]
          schema:
            type: string
        - name: endSiteID
          in: query
          description: Enter end siteID [chargerdb.site table]
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SitePricingAuditRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/billing/address:
    get:
      tags:
        - üí∞ Billing
      summary: Get Billing Address for user
      description: Get's the billing address from AccountMaster for the given uid,
        fallback to owner_reg address if no billing in AccountMaster
      operationId: get-billing-address
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: vehicleMapId
          in: query
          description: VehicleMapId
          schema:
            type: integer
        - name: product
          in: query
          description: '(default: BILLING_CHARGING) or BILLING_CHARGING_MEMBERSHIP'
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BillingAddress'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üí∞ Billing
      summary: Update Billing Address For User
      description: Updates the billing address in account master and billing engine
      operationId: update-billing-address
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.BillingAddressUpdate'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: BillingAddressUpdate
  /v1/billing/session:
    post:
      tags:
        - üí∞ Billing
      summary: Post billing item to BPM
      description: USER session posted to billing engine for invoicing
      operationId: post-session-for-billing
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bpm.BillingRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: BillingRq
  /v1/cert:
    get:
      tags:
        - üóû certs
      summary: GET Mos certificates by type
      description: get certs from cert store in chargerdb
      operationId: get-certs
      parameters:
        - name: referenceNumber
          in: query
          description: referenceNumber
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: type
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CertResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üóû certs
      summary: POST Mos cert events
      description: store certs coming from Mos events
      operationId: save-certs
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SaveCertReq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: Event
  /v1/credit/append_cooperation:
    post:
      tags:
        - ‚≠ê Credit
      summary: Add cooperation Credit
      description: Support for cooperation credit
      operationId: append-cooperation-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.CooperationCreditRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: EshopCreditRq
  /v1/credit/append_package:
    post:
      tags:
        - ‚≠ê Credit
      summary: Add package Credit
      description: Support for package credit
      operationId: append-package-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.EshopCreditRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CardInfoRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: EshopCreditRq
  /v1/credit/append_product:
    post:
      tags:
        - ‚≠ê Credit
      summary: Append Package Product
      operationId: append-product
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.AppendProductRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: AppendProductRq
  /v1/credit/available:
    get:
      tags:
        - ‚≠ê Credit
      summary: Get available Credit
      operationId: get-available-credit
      parameters:
        - name: uid
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: countryCode
          in: query
          description: CountryCode
          schema:
            type: string
        - name: vin
          in: query
          description: Vin
          schema:
            type: string
        - name: at
          in: query
          description: At
          schema: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.AvailableCreditsRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - ‚≠ê Credit
      summary: '[DEPRECATED] Get available Credit'
      operationId: deprecated-get-available-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.AvailableCreditsRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.AvailableCreditsRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: AvailableCreditsRq
  /v1/credit/cancel_package:
    post:
      tags:
        - ‚≠ê Credit
      summary: Cancel Package Credits
      operationId: cancel-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.CancelCreditRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: CancelCreditRq
  /v1/credit/detail:
    get:
      tags:
        - ‚≠ê Credit
      summary: Get Credit detail
      operationId: get-charging-package-credit
      parameters:
        - name: uid
          in: query
          description: UserId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.ChargingPackage'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/credit/forfeit:
    post:
      tags:
        - ‚≠ê Credit
      summary: Forfeit Credits
      operationId: forfeit-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.ForfeitCreditsRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: ForfeitCreditsRq
  /v1/credit/fulfillment:
    post:
      tags:
        - ‚≠ê Credit
      summary: Adds credit to user charge credit table
      operationId: credit-fulfillment
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.CreditFulfillment'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: CreditFulfillment
  /v1/credit/redeem:
    post:
      tags:
        - ‚≠ê Credit
      summary: Redeem Credits
      operationId: redeem-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.RedeemCreditsRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.RedeemCreditsRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: RedeemCreditsRq
  /v1/credit/reportRevenue:
    post:
      tags:
        - ‚≠ê Credit
      summary: report cooperation Revenue
      description: Report cooperation Revenue
      operationId: report-cooperation-revenue
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.ReportRevenueRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: EshopCreditRq
  /v1/dispute/approvable:
    get:
      tags:
        - ‚öîÔ∏è  Dispute
      summary: Get approvable disputes
      operationId: dispute-get-approvable-disputes
      parameters:
        - name: programType
          in: query
          description: ProgramType
          schema:
            type: string
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/dispute/approve:
    post:
      tags:
        - ‚öîÔ∏è  Dispute
      summary: 'Approve dispute: refund or waive. Can be done for a charge session
        or session fee.'
      operationId: dispute-approve
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.ApproveDisputeRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.ApprovedDisputeResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: ApproveDisputeRequest
  /v1/dispute/initiate:
    post:
      tags:
        - ‚öîÔ∏è  Dispute
      summary: 'Initiate dispute: refund or waive. Can be done for a charge session
        or session fee.'
      operationId: dispute-initiate
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.InitiateDisputeRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.ApprovedDisputeResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: InitiateDisputeRequest
  /v1/dispute/process:
    post:
      tags:
        - ‚öîÔ∏è  Dispute
      summary: Process approved disputes
      operationId: dispute-process
      parameters:
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/dispute/sessions:
    post:
      tags:
        - ‚öîÔ∏è  Dispute
      summary: Get session History
      operationId: dispute-get-session-history
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.ChargerSessionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: ChargerSessionRequest
  /v1/email/notification:
    post:
      tags:
        - üìß Emails
      summary: charge session email notification
      operationId: charge-session-email-notification
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.EmailDeliveryNotificationRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
        - ADFS Token: []
      x-codegen-request-body-name: SendChargeSessionEmailNotification
  /v1/enforcement:
    get:
      tags:
        - üö® Cutoff Enforcement
      summary: Get enforcement for the given properties (vin, country code, currency
        code)
      operationId: get-enforcement
      parameters:
        - name: vin
          in: query
          description: Vin
          required: true
          schema:
            type: string
        - name: countryCode
          in: query
          description: Country Code
          required: true
          schema:
            type: string
        - name: currencyCode
          in: query
          description: Currency Code
          required: true
          schema:
            type: string
        - name: isEnterprise
          in: query
          description: Is Enterprise
          required: true
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.EnforceableCategory'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/enforcement/category/{categoryName}/{categoryValue}:
    get:
      tags:
        - üö® Cutoff Enforcement
      summary: Get enforcement for category value
      operationId: get-enforcement-for-entry
      parameters:
        - name: categoryName
          in: path
          description: Category Name
          required: true
          schema:
            type: string
        - name: categoryValue
          in: path
          description: Category Value
          required: true
          schema:
            type: string
        - name: enforced
          in: query
          description: Category Enforced
          required: true
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Enforcement'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üö® Cutoff Enforcement
      summary: Create enforcement entry for enforcement category
      operationId: create-enforcement-entry
      parameters:
        - name: categoryName
          in: path
          description: Category Name
          required: true
          schema:
            type: string
        - name: categoryValue
          in: path
          description: Category Value
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.NewEnforcementEntryRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: NewEnforcementEntryRq
    delete:
      tags:
        - üö® Cutoff Enforcement
      summary: Delete enforcement entry for enforcement category by value
      operationId: delete-enforcement-entry
      parameters:
        - name: categoryName
          in: path
          description: Category Name
          required: true
          schema:
            type: string
        - name: categoryValue
          in: path
          description: Category Value
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.DeleteEnforcementEntryRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: DeleteEnforcementEntryRq
  /v1/enforcement/cutoff:
    get:
      tags:
        - üö® Cutoff Enforcement
      summary: Get all defined currency cutoff limits
      operationId: get-all-currency-cutoff-limits
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.CurrencyCutoffLimits'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/enforcement/cutoff/{currencyCode}:
    get:
      tags:
        - üö® Cutoff Enforcement
      summary: Get cutoff limit by currency
      operationId: get-cutoff-limit-by-currency
      parameters:
        - name: currencyCode
          in: path
          description: Currency Code
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.CutoffLimit'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    put:
      tags:
        - üö® Cutoff Enforcement
      summary: Update currency cutoff limit
      operationId: update-currency-cutoff-limit
      parameters:
        - name: currencyCode
          in: path
          description: Currency Code
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateCurrencyCutoffLimit'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateCurrencyCutoffLimitRq
    post:
      tags:
        - üö® Cutoff Enforcement
      summary: Create currency cutoff limit
      operationId: create-currency-cutoff-limit
      parameters:
        - name: currencyCode
          in: path
          description: Currency Code
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateCurrencyCutoffLimit'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateCurrencyCutoffLimitRq
  /v1/enterprise/export:
    post:
      tags:
        - üè≠ Enterprise
      summary: Get charging export for the given trt_ids
      description: Export to CSV
      operationId: get-t4b-export
      parameters:
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
      requestBody:
        description: List of Trt Ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.T4BExportRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.T4BHistoryExport'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: T4BExportRequest
  /v1/enterprise/history:
    get:
      tags:
        - üè≠ Enterprise
      summary: Get paginated charging history for a trtId
      description: Get paginated charging history
      operationId: get-trt-paginated-history
      parameters:
        - name: trtId
          in: query
          description: trtId
          required: true
          schema:
            type: integer
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
        - name: pageNo
          in: query
          description: pageNo
          schema:
            type: integer
        - name: pageSize
          in: query
          description: pageSize
          schema:
            type: integer
        - name: sortBy
          in: query
          description: sortBy
          schema:
            type: string
        - name: sortOrder
          in: query
          description: sortOrder
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryPaginationRs'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/eps/GetSite:
    get:
      tags:
        - üòÉ Eps
      summary: Get site details from EPS
      description: get site details GRPC
      operationId: get-eps-site-details
      parameters:
        - name: trt_id
          in: query
          description: trtID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersv2.GetSiteByTrtIDRq'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/equipments:
    get:
      tags:
        - üîã Site Equipment
      summary: GET all site equipments
      description: Gets all location and equipment details
      operationId: equipment-site-json
      parameters:
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.GetLocationsResp'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üîã Site Equipment
      summary: Put Eligible tariffs+locations to Hub
      description: Put Eligible tariffs+locations to Hub
      operationId: put-locations-tariff-hub
      parameters:
        - name: operatorId
          in: query
          description: OperatorId
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
        - name: force
          in: query
          description: Force
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ocpigtwy.PutLocationsResp'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/equipments/{location_id}:
    get:
      tags:
        - üîã Site Equipment
      summary: GET site equipments by location GUID
      description: Get location and equipment details by GUID
      operationId: equipment-site-by-id
      parameters:
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/equipments/refresh:
    post:
      tags:
        - üîã Site Equipment
      summary: Refresh Equipment info
      description: Refresh EVSE/Connector info
      operationId: refresh-equipment-info
      parameters:
        - name: trtID
          in: query
          description: TrtID
          required: true
          schema:
            type: string
        - name: programType
          in: query
          description: Program Type (PTSCH/PTWCR)
          required: true
          schema:
            type: string
        - name: refreshType
          in: query
          description: Refresh Type (STATIC/DYNAMIC)
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/event/cdc:
    post:
      tags:
        - üóìÔ∏è events
      summary: Installbase CDC events
      description: store data from Installbase CDC events
      operationId: installbase-events
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.CDCEvent'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: Event
  /v1/fapiao/expired:
    put:
      tags:
        - üßæ Fapiao
      summary: Update Expired PPU fapiao request's status
      operationId: update-expired-fapiao-requests
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.UpdateExpiredRequestsRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: updateExpiredFapiaoRequests
  /v1/fapiao/request:
    post:
      tags:
        - üßæ Fapiao
      summary: Request PPU fapiao for sessions
      operationId: request-fapiao
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.RequestFapiaoRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: RequestFapiaoRq
  /v1/fapiao/status:
    put:
      tags:
        - üßæ Fapiao
      summary: Update PPU fapiao request's status
      operationId: update-fapiao-status
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.UpdateFapiaoStatusRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateFapiaoStatusRq
  /v1/invoice/details:
    get:
      tags:
        - üìÑ Invoice
      summary: Get invoices by Account UID
      operationId: get-invoice-details
      parameters:
        - name: uid
          in: query
          description: Enter account Uid
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.GetInvoiceByAccountUIDRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    put:
      tags:
        - üìÑ Invoice
      summary: Update invoice details
      operationId: update-invoice-details
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateInvoiceDetails'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateInvoiceDetails
  /v1/invoice/documents:
    post:
      tags:
        - üìÑ Invoice
      summary: Update Invoice Documents by InvoiceNumber
      operationId: update-invoice-documents
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.InvoiceDocumentRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: InvoiceDocumentRq
  /v1/invoice/group:
    put:
      tags:
        - üìÑ Invoice
      summary: Update billing invoice details (callback)
      operationId: update-group-invoice-details
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateGroupInvoiceDetails'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateGroupInvoiceDetails
  /v1/invoice/notification:
    put:
      tags:
        - üìÑ Invoice
      summary: Update invoice details by Id from notifications
      operationId: update-invoice-by-id
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.InvoiceNotification'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: SaveStatementRq
  /v1/legacy/charge_credit:
    post:
      tags:
        - ‚ùå Legacy (Internal Use Only)
      summary: Initialize or Renew credits
      description: Support for api/Myxxx/v1/Supercharge/GetChargeCreditsAndInitializeOrRenew
      operationId: legacy-initialize-or-renew-credits
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.InitializeCreditsRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CreditDbm'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: InitializeCredits
  /v1/legacy/redemptions:
    get:
      tags:
        - ‚ùå Legacy (Internal Use Only)
      summary: Get Credit Redemption History
      description: Support for api/Myxxx/v1/Supercharge/History
      operationId: legacy-get-credit-redemptions
      parameters:
        - name: uid
          in: query
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.LegacyRedemptionRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/legacy/user_credit:
    get:
      tags:
        - ‚ùå Legacy (Internal Use Only)
      summary: Get User Credit History
      description: Support for api/Myxxx/v1/SuperChargerUserCredits/History
      operationId: legacy-get-user-credit-history
      parameters:
        - name: uid
          in: query
          description: UserID
          schema:
            type: integer
        - name: countryCode
          in: query
          description: CountryCode
          schema:
            type: string
        - name: excludeExpired
          in: query
          description: Exclude Expired
          schema:
            type: boolean
        - name: referenceNumber
          in: query
          description: ReferenceNumber
          schema:
            type: string
        - name: benefitType
          in: query
          description: BenefitType
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CreditHistoryRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    put:
      tags:
        - ‚ùå Legacy (Internal Use Only)
      summary: Update available credit
      description: Support for api/Myxxx/v1/SuperChargerUserCredits/RedeemSessionCredit
      operationId: legacy-update-available-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.LegacyUpdateCreditRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: LegacyUpdateCreditRq
    post:
      tags:
        - ‚ùå Legacy (Internal Use Only)
      summary: Apply User Credit
      description: Support for api/Myxxx/v1/SuperChargerUserCredits/(GoodwillCredits
        + AssignChargerCredits)
      operationId: legacy-apply-user-credit
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.LegacyApplyCreditRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: LegacyApplyCreditRq
  /v1/legacy/user_credit/expiry:
    put:
      tags:
        - ‚ùå Legacy (Internal Use Only)
      summary: Update User Credit ExpiryDates
      description: Support for api/Myxxx/v1/SuperChargerUserCredits/(GoodwillCredits
        + AssignChargerCredits)
      operationId: legacy-update-user-credit-expiry-dates
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.CreditExpiryDateUpdate'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: CreditExpiryDateUpdate
  /v1/location/search:
    get:
      tags:
        - üòÉ Location
      summary: Get charging locations
      description: Get charging locations by country code or other params
      operationId: get-charging-locations
      parameters:
        - name: maxCount
          in: query
          description: Max Count
          schema:
            type: integer
        - name: countryCode
          in: query
          description: countryCode
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.LocationSearchRs'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/message/inbox:
    post:
      tags:
        - üìß MESSAGE
      summary: Used to send inbox messages
      description: This will push the inbox message to kafka topic
      operationId: send-inboxmessage
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.MessageRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: MessageRq
  /v1/message/roaming:
    post:
      tags:
        - üìß MESSAGE
      summary: Used to send roaming specific email/inbox messages
      description: This will push the inbox message to kafka topic
      operationId: send-roaming-messages
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.RoamingMessageRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: MessageRq
  /v1/migration/user:
    get:
      tags:
        - üîê Charge2.0
      summary: Is the user enabled for charge 2.0
      description: Should the v2 UI be displayed for this uid
      operationId: migration-user-enabled
      parameters:
        - name: uid
          in: query
          description: User ID
          schema:
            type: integer
        - name: vin
          in: query
          description: VIN
          schema:
            type: string
        - name: trtId
          in: query
          description: TRT ID
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.UserEnabledRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/payment/authorize:
    post:
      tags:
        - üìÑ Payment
      summary: Authorize Payment
      operationId: authorize-payment
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.AuthorizePaymentRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.AuthorizePaymentRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: PaymentRq
  /v1/payment/complete:
    post:
      tags:
        - üìÑ Payment
      summary: Complete offline payment flow
      description: Mark offline payment as completed
      operationId: complete-offline-payment
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.CompletePaymentRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CompletePaymentRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: CompletePaymentRq
  /v1/payment/initiate:
    post:
      tags:
        - üìÑ Payment
      summary: Initiate offline payment flow
      description: Pay for all unpaid sessions via payx ui
      operationId: initiate-offline-payment
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.OfflinePaymentRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.OfflinePaymentRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: OfflinePaymentRq
  /v1/payment/monthly/processPending:
    post:
      tags:
        - üìÑ Payment
      summary: Process group invoice pending payment
      operationId: process-pending-payments
      parameters:
        - name: limit
          in: query
          description: Batch size
          required: true
          schema:
            type: integer
        - name: gracePeriod
          in: query
          description: Grace Period in number of days from the invoice generation date
          required: true
          schema:
            type: integer
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/payment/notification/cardExpired:
    post:
      tags:
        - üìÑ Payment
      summary: Send push notification for expired card
      operationId: send-push-notification-expired-card
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.CardExpiredPushNotification'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: PaymentRq
  /v1/payment/notification/charge:
    post:
      tags:
        - üìÑ Payment
      summary: Update notification details
      operationId: update-notification-details
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.PaymentNotificationRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: PaymentRq
  /v1/payment/notification/refund:
    post:
      tags:
        - üìÑ Payment
      summary: Update notification details for refund
      operationId: update-notification-details-refund
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.PaymentNotificationRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: PaymentRq
  /v1/payment/statement:
    post:
      tags:
        - üìÑ Payment
      summary: Process statement payment
      operationId: process-statement-payments
      parameters:
        - name: limit
          in: query
          description: Batch size
          required: true
          schema:
            type: integer
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/session/cdrs:
    get:
      tags:
        - üîå Session
      operationId: get-cdrs
      parameters:
        - name: dateFrom
          in: query
          description: date from
          schema:
            type: string
        - name: dateTo
          in: query
          description: date to
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          schema:
            type: integer
        - name: credentialId
          in: query
          description: credential ID
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.GetCDRsResp'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/session/event:
    post:
      tags:
        - üîå Session
      summary: Call for every session start/latch event
      description: EPS calls when user connects the latch to vehicle and charge session
        id is created
      operationId: session-event
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SessionEventRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SessionEventRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: ChargeSession
  /v1/session/invoice:
    post:
      tags:
        - üîå Session
      summary: Repost session to billing engine
      operationId: invoice-session
      parameters:
        - name: chargeSessionId
          in: query
          description: chargeSessionId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.ProcessSessionResult'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/session/price:
    get:
      tags:
        - üîå Session
      summary: Get price of a charge session
      description: returns the value of a charge session
      operationId: price-session
      parameters:
        - name: trtId
          in: query
          description: trtId
          schema:
            type: integer
        - name: chargeStartDateTimeUtc
          in: query
          description: chargeStartDateTimeUtc
          schema:
            type: string
        - name: batteryKwh
          in: query
          description: batteryKwh
          schema:
            type: number
        - name: minTier60ToInf
          in: query
          description: minTier60ToInf
          schema:
            type: number
        - name: minTier0To60
          in: query
          description: minTier0To60
          schema:
            type: number
        - name: minParking
          in: query
          description: minParking
          schema:
            type: number
        - name: minParkingTier1
          in: query
          description: minParkingTier1
          schema:
            type: number
        - name: minParkingTier2
          in: query
          description: minParkingTier2
          schema:
            type: number
        - name: authSessionId
          in: query
          description: authSessionId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SessionPriceRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/session/process:
    post:
      tags:
        - üîå Session
      summary: Process a supercharger session
      description: Process a supercharger session
      operationId: process-session
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.ChargeSession'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.ProcessSessionResult'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: ChargeSession
  /v1/session/register:
    post:
      tags:
        - üîå Session
      summary: post session details to register in payment_pre_auth
      description: returns the register status once completed
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SessionRegisterRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SessionRegisterRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: SessionDetails
  /v1/session/signedData:
    get:
      tags:
        - üîå Session
      summary: Get session signed details by chargeSessionId and UID
      description: returns the session signed details once completed by chargeSessionId
        and UID
      operationId: session-signed-data
      parameters:
        - name: chargeSessionId
          in: query
          description: chargeSessionId
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: userId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SessionSignedData'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/session/status:
    get:
      tags:
        - üîå Session
      summary: Get session details by authSessionId and UID
      description: returns the session details once completed by authSessionId and
        UID
      operationId: session-status
      parameters:
        - name: authSessionId
          in: query
          description: authSessionId
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: userId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site:
    get:
      tags:
        - üîã Site
      summary: Get Site info
      description: Get Site info from site table, refresh from IB if missing
      operationId: get-site-details
      parameters:
        - name: trtId
          in: query
          description: TrtID
          schema:
            type: string
        - name: projectId
          in: query
          description: ProjectID/installbase siteID
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SiteInfoRs'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üîã Site
      summary: Save Site info
      description: Save site info in site table
      operationId: site-details-save
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SiteInfoSaveRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: SiteDetails
  /v1/site/controller/price:
    get:
      tags:
        - üîã Site
      summary: Get live site controller price info
      description: Get live site controller price info from core
      operationId: get-live-site-controller-pricing-v1
      parameters:
        - name: trtId
          in: query
          description: TrtID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protos.PricebookEnvelope'
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site/holdAmount:
    get:
      tags:
        - üîã Site
      summary: Get hold amount by trt id
      operationId: get-hold-amount-by-trtid
      parameters:
        - name: trtID
          in: query
          description: Trt ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HoldAmountRs'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site/phrase:
    post:
      tags:
        - üîã Site
      summary: Refresh phrases
      description: Refresh phrases for site/sc locations file
      operationId: refresh-site-phrase
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site/price:
    get:
      tags:
        - üîã Site
      summary: Get Site Pricing
      description: Get site pricing by UID(memebership), trtid
      operationId: site-pricing-get
      parameters:
        - name: uid
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: trtId
          in: query
          description: xxx location ID
          required: true
          schema:
            type: string
        - name: vehicleType
          in: query
          description: Site Pricing type i.e TSLA/NTSLA
          schema:
            type: string
        - name: programType
          in: query
          description: Site charging type i.e PTSCH
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SitePricebooksRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site/price/{pricebook_guid}:
    get:
      tags:
        - üîã Site
      summary: GET site pricing by PricebookGUID
      description: Get Site pricing by PricebookGUID
      operationId: site-price-by-pricebook-id
      parameters:
        - name: pricebook_guid
          in: path
          description: pricebook_guid
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SitePricings'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site/prices:
    get:
      tags:
        - üîã Site
      operationId: get-site-pricings
      parameters:
        - name: dateFrom
          in: query
          description: date from
          schema:
            type: string
        - name: dateTo
          in: query
          description: date to
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.GetSitePricingsResp'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/device/commands/start:
    post:
      security:
        - ApiClientKey: [ ]
        - ApiClientId: [ ]
      description: "EPS call to start ADHOC charging"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/modelsv2.ADHOCStartSessionRq'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Success'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Error'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Error'
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Error'
      tags:
        - "üì± Device"
      summary: "Start ADHOC charging flow"
      operationId: "device-start"
  /v1/device/commands/stop:
    post:
      security:
        - ApiClientKey: [ ]
        - ApiClientId: [ ]
      description: "EPS call to stop ADHOC charging"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/modelsv2.ADHOCStartSessionRq'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Success'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Error'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Error'
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/models.Error'
      tags:
        - "üì± Device"
      summary: "Stop ADHOC charging flow"
      operationId: "device-stop"
  /v1/site/pricing:
    post:
      tags:
        - üîã Site
      summary: Save Site Pricing
      description: Save pricing updates in site_pricing table by trtID
      operationId: site-pricing-save
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SitePricingSaveRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: SiteDetails
  /v1/site/supportedLocale:
    post:
      tags:
        - üîã Site
      summary: Refresh supported locale
      description: Refresh supported locale for dc locations file
      operationId: refresh-site-supported-locale
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/site/vehicle/price:
    get:
      tags:
        - üîã Site
      summary: Get live site price info
      description: Get live site price info from core
      operationId: get-live-site-pricing-v1
      parameters:
        - name: siteID
          in: query
          description: SiteID/FastchargedbID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SiteVehiclePriceJSON'
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/survey/send:
    post:
      tags:
        - ‚úçÔ∏è Survey
      summary: send charging survey notification
      description: Send user charging survey
      operationId: send-charge-survey
      parameters:
        - name: limit
          in: query
          description: Batch size
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SurveySendRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/survey/status:
    get:
      tags:
        - ‚úçÔ∏è Survey
      summary: Get charging survey status
      description: Get the completed status of the charge session survey
      operationId: get-charge-session-survey
      parameters:
        - name: uid
          in: query
          description: Use Id
          required: true
          schema:
            type: integer
        - name: sessionId
          in: query
          description: Session Id
          required: true
          schema:
            type: integer
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - ‚úçÔ∏è Survey
      summary: Core to mark the survey as complete
      description: after survey has been submitted to survey service, api marks the
        survey to COMPLETE
      operationId: survey-complete
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SurveyStatusUpdateRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: SurveyCompleteRq
  /v1/survey/submit:
    post:
      tags:
        - ‚úçÔ∏è Survey
      summary: submit a charging survey during a charge session
      description: Submit a charging survey
      operationId: submit-charge-survey
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SurveySubmitRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: SurveySubmitRq
  /v1/terminal/authorize:
    post:
      tags:
        - ‚úçÔ∏è Terminal
      summary: authorize hold amount on the card swiped
      description: After card read, authorize will trigger the capture of hold amount
        on the card
      operationId: terminal-authorize
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.TerminalAuthorizeRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.TerminalAuthorizeRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: TerminalUIRq
  /v1/terminal/find/receipt:
    post:
      tags:
        - ‚úçÔ∏è Terminal
      summary: get receipt history by filters
      description: When user would like to retrive receipt after losing the QR code
      operationId: terminal-receipt-finder
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SearchReceiptsRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.GetReceiptRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: GetReceiptRq
  /v1/terminal/read:
    post:
      tags:
        - ‚úçÔ∏è Terminal
      summary: read request for terminal device
      description: Submit a Terminal read
      operationId: submit-terminal-read
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.TerminalRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.TerminalRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: TerminalRq
  /v1/terminal/receipt:
    get:
      tags:
        - ‚úçÔ∏è Terminal
      summary: authorize hold amount on the card swiped
      description: After card read, authorize will trigger the capture of hold amount
        on the card
      operationId: terminal-receipt-get
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.GetReceiptRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.GetReceiptRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: GetReceiptRq
  /v1/terminal/start:
    post:
      tags:
        - ‚úçÔ∏è Terminal
      summary: start request for terminal device
      description: Submit a Terminal start
      operationId: submit-terminal-start
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.TerminalStartRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.TerminalRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: TerminalRq
  /v1/terminal/stop:
    post:
      tags:
        - ‚úçÔ∏è Terminal
      summary: stop request for terminal device
      description: Submit a Terminal stop
      operationId: submit-terminal-stop
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.TerminalRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.TerminalRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: TerminalRq
  /v1/terminal/ui:
    post:
      tags:
        - ‚úçÔ∏è Terminal
      summary: show in terminal UI request
      description: Update Terminal UI with message
      operationId: submit-terminal-ui
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payterpgw.TerminalUIRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payterpgw.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: TerminalUIRq
  /v1/user/aggregate:
    post:
      tags:
        - üòÉ User
      summary: Get aggregation stats for a user
      description: Get aggregation stats for a user
      operationId: get-user-aggregated-stats
      requestBody:
        description: Request Aggregation Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.AggregationRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.AggregationRs'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: AggregateUser
  /v1/user/balance:
    get:
      tags:
        - üòÉ User
      summary: Get outstanding balances
      description: Get unpaid total balances
      operationId: get-user-balance
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: vin
          in: query
          description: Vin
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/modelsv2.BalanceRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/eligibility:
    post:
      tags:
        - üòÉ User
      summary: Get Package Eligibility
      operationId: package-Eligibility
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.EligibilityRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: EligibilityRq
  /v1/user/export:
    get:
      tags:
        - üòÉ User
      summary: Get export for the given uid
      description: Export to CSV
      operationId: get-user-export
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: vin
          in: query
          description: Vin
          schema:
            type: string
        - name: vehicleType
          in: query
          description: VehicleType
          schema:
            type: string
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryExport'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/export/generate:
    post:
      tags:
        - üòÉ User
      summary: Generate Export Document and send to DMS
      description: Async Document Export Generation
      operationId: generate-export
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.HistoryRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: AsyncExportRequest
  /v1/user/export/initiate:
    post:
      tags:
        - üòÉ User
      summary: Initiate export request for a user
      description: Initiate export request for a user, callback through email
      operationId: post-user-export-initiate
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.HistoryRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: AsyncExportRequest
  /v1/user/history:
    get:
      tags:
        - üòÉ User
      summary: Get session history for the given uid
      description: Pay for all unpaid sessions
      operationId: get-user-history
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: vin
          in: query
          description: Vin
          schema:
            type: string
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/invoice:
    get:
      tags:
        - üòÉ User
      summary: check if invoice belongs to uid
      operationId: check-for-valid-user-invoice
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: dmsId
          in: query
          description: DMS Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.ValidInvoice'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/pay:
    post:
      tags:
        - üòÉ User
      summary: '[DEPRECATED] Pay for outstanding balance'
      description: '[DEPRECATED] Pay for all unpaid sessions'
      operationId: pay-now
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.PayNowRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.PaymentRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: PayNowRequest
  /v1/user/preauth:
    get:
      tags:
        - üòÉ User
      summary: Get ntsla session details for the given uid
      description: admin endpoint shows  ntsla session  details by user
      operationId: get-user-ntsla-details
      parameters:
        - name: userId
          in: query
          description: Uid
          required: true
          schema:
            type: integer
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.NtslaSessionDetail'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/session/latest:
    get:
      tags:
        - üòÉ User
      summary: Get latest session history for the given uid
      description: Get latest session history for the given uid
      operationId: get-latest-user-session
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.LatestSessionRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/validate:
    get:
      tags:
        - üòÉ User
      summary: Validate Non-xxx user is ready to charge
      description: Validates billing address, pending balance, card on file
      operationId: user-validate
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.UserValidated'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/vehicle:
    get:
      tags:
        - üòÉ User
      summary: Get unique vehicle list from session history
      operationId: get-user-vehicles
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.VinList'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/user/vehicle/enforce:
    post:
      tags:
        - üòÉ User
      summary: Post Enforcement Event For User
      operationId: user-enforcement
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/vehicle/{vin}/bulkStatus:
    post:
      tags:
        - üèéÔ∏è Vehicle
      summary: Set multiple supercharger statuses for a vehicle by vin
      description: Set multiple supercharger statuses for a vehicle by vin
      operationId: bulk-set-charger-status-by-vin
      parameters:
        - name: vin
          in: path
          description: Vin
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.SetVehicleFlagsRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: BulkUpdateVehicleFlagRq
  /v1/vehicle/{vin}/enforce:
    get:
      tags:
        - üèéÔ∏è Vehicle
      summary: returns whether or not a vin should be enforced by the cutoff limit
      description: returns whether or not a vin should be enforced by the cutoff limit
        considering the country code and currency code
      operationId: get-enforce-cutoff-for-vin
      parameters:
        - name: vin
          in: path
          description: Vin
          required: true
          schema:
            type: string
        - name: countryCode
          in: query
          description: Country Code
          required: true
          schema:
            type: string
        - name: currencyCode
          in: query
          description: Currency Code
          required: true
          schema:
            type: string
        - name: isEnterprise
          in: query
          description: Is Enterprise
          required: true
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PPUEnforced'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v1/vehicle/{vin}/status:
    get:
      tags:
        - üèéÔ∏è Vehicle
      summary: Get supercharger status for a vehicle by vin
      description: Get supercharger status for a vehicle by vin
      operationId: get-charger-status-by-vin
      parameters:
        - name: vin
          in: path
          description: Vin
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.VehicleFlagsRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üèéÔ∏è Vehicle
      summary: Set the supercharger status for a vehicle by vin
      description: Set the supercharger status for a vehicle by vin
      operationId: set-charger-status-by-vin
      parameters:
        - name: vin
          in: path
          description: Vin
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateVehicleFlagRq'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.UpdateVehicleFlagRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateVehicleFlagRq
  /v2/billing/address:
    get:
      tags:
        - üí∞ Billing
      summary: Get Billing Address for user
      description: Get's the billing address from AccountMaster for the given uid,
        fallback to owner_reg address if no billing in AccountMaster. Supports All
        address types.
      operationId: get-billing-address-v2
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
        - name: vehicleMapId
          in: query
          description: VehicleMapId
          schema:
            type: integer
        - name: product
          in: query
          description: '(default: BILLING_CHARGING) or BILLING_CHARGING_MEMBERSHIP'
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BillingAddress'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/billing/address/populate:
    post:
      tags:
        - üí∞ Billing
      summary: Populate Billing Charging Address for user
      description: Uses default address logic if User does not have BILLING_CHARGING
        Address
      operationId: populate-billing-charging-address
      parameters:
        - name: userId
          in: query
          description: UserId
          required: true
          schema:
            type: integer
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        208:
          description: Already Reported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/equipments/{trt_id}:
    get:
      tags:
        - üîã Site Equipment
      summary: GET site equipments by trt id
      description: Get location and equipment details by trt id
      operationId: equipment-site-by-trtId
      parameters:
        - name: trt_id
          in: path
          description: trt_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/fapiao/request:
    post:
      tags:
        - üßæ Fapiao
      summary: Request PPU CTA fapiao for sessions
      operationId: request-CTA-fapiao
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.RequestFapiaoRq'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: RequestFapiaoRq
  /v2/fapiao/status:
    put:
      tags:
        - üßæ Fapiao
      summary: Update CTA PPU fapiao request's status
      operationId: update-CTA-fapiao-status
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.UpdateFapiaoRequestRq'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: UpdateFapiaoRequestRq
  /v2/invoice/monthly/generate:
    post:
      tags:
        - üìÑ Invoice
      summary: generate monthly invoiecs
      operationId: generate-monthly-invoices
      parameters:
        - name: limit
          in: query
          description: Batch size
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CycleDocProcessingRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/invoice/receipt:
    post:
      tags:
        - üìÑ Invoice
      summary: Update receipt details
      operationId: update-receipt-details
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.StatementResponse'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: StatementResponse
  /v2/invoice/regenerate:
    post:
      tags:
        - üìÑ Invoice
      summary: regenerate invoice
      operationId: rgenerate-invoice
      parameters:
        - name: chargeSessionId
          in: query
          description: chargeSessionId
          required: true
          schema:
            type: string
        - name: isNewAddress
          in: query
          description: isNewAddress
          required: true
          schema:
            type: boolean
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/invoice/statement:
    post:
      tags:
        - üìÑ Invoice
      summary: Update statement details
      operationId: update-statement-details
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.StatementResponse'
        required: true
      responses:
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: StatementResponse
  /v2/invoice/statement/generate:
    post:
      tags:
        - üìÑ Invoice
      summary: generate statement
      operationId: generate-statement-details
      parameters:
        - name: limit
          in: query
          description: Batch size
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.CycleDocProcessingRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/site:
    get:
      tags:
        - üîã Site
      summary: Get Site info
      description: Get Site info from site table
      operationId: get-site-details-v2
      parameters:
        - name: trtId
          in: query
          description: TrtID
          schema:
            type: string
        - name: projectId
          in: query
          description: ProjectID/installbase siteID
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SiteInfoRsV2'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
    post:
      tags:
        - üîã Site
      summary: Refresh Site
      description: Refresh site and site pricing tables
      operationId: refresh-site
      parameters:
        - name: trtId
          in: query
          description: TrtID
          schema:
            type: string
        - name: projectId
          in: query
          description: ProjectID/installbase siteID
          schema:
            type: string
        - name: refreshPricing
          in: query
          description: Refresh Pricing too
          schema:
            type: boolean
        - name: refreshEps
          in: query
          description: Refresh EPS fastchargerid too
          schema:
            type: boolean
        - name: pricingSource
          in: query
          description: Source for pricebooks IB or OCW, defaul to IB
          schema:
            type: string
        - name: force
          in: query
          description: Force update on already created pricebooks (admin use only)
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.Site'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/site/file:
    post:
      tags:
        - üîã Site
      summary: Refresh Site JSON
      description: Refresh site json file in S3
      operationId: refresh-site-json
      parameters:
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
        - name: indent
          in: query
          description: Indent
          schema:
            type: boolean
        - name: force
          in: query
          description: Force
          schema:
            type: boolean
        - name: fileType
          in: query
          description: 'fileType(SC/DC) default: SC'
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Success'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/site/price:
    get:
      tags:
        - üîã Site
      summary: Get Site Pricing v2
      description: Get site pricing by trtId, vehicleType and programType
      operationId: site-pricing-get-v2
      parameters:
        - name: trtId
          in: query
          description: xxx location ID
          required: true
          schema:
            type: string
        - name: vehicleType
          in: query
          description: Site Pricing type i.e TSLA/NTSLA
          schema:
            type: string
        - name: programType
          in: query
          description: Site charging type i.e PTSCH
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SitePricebooksRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/site/sync:
    post:
      tags:
        - üîã Site
      summary: Sync Site pricing
      description: Sync site and site pricing tables from installbase
      operationId: sync-site
      parameters:
        - name: trtId
          in: query
          description: TrtID
          schema:
            type: string
        - name: limit
          in: query
          description: Limit
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.SyncSiteRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/user/export:
    get:
      tags:
        - üòÉ User
      summary: Get charging history export for t4b user
      description: Get charging history export for t4b user
      operationId: get-user-export-v2
      parameters:
        - name: userId
          in: query
          description: userId
          required: true
          schema:
            type: integer
        - name: vin
          in: query
          description: Vin
          schema:
            type: string
        - name: startTime
          in: query
          description: startTime
          required: true
          schema: {}
        - name: endTime
          in: query
          description: endTime
          required: true
          schema: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryExport'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/user/history:
    get:
      tags:
        - üòÉ User
      summary: Get paginated charging history for a user
      description: Get paginated charging history
      operationId: get-user-paginated-history
      parameters:
        - name: userId
          in: query
          description: userId
          required: true
          schema:
            type: integer
        - name: vin
          in: query
          description: Vin
          schema:
            type: string
        - name: startTime
          in: query
          description: StartTime
          schema: {}
        - name: endTime
          in: query
          description: EndTime
          schema: {}
        - name: pageNo
          in: query
          description: pageNo
          schema:
            type: integer
        - name: pageSize
          in: query
          description: pageSize
          schema:
            type: integer
        - name: sortBy
          in: query
          description: sortBy
          schema:
            type: string
        - name: sortOrder
          in: query
          description: sortOrder
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryPaginationRs'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/vehicle/enabled:
    get:
      tags:
        - üèéÔ∏è V2 Vehicle
      summary: Get supercharger status by requestor id + type
      description: Checks if supercharging should be enabled for a charge session
      operationId: get-supercharging-enabled
      parameters:
        - name: requestorId
          in: query
          description: Requestor ID
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Type
          required: true
          schema:
            type: string
        - name: chargeSessionId
          in: query
          description: Charge Session ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsv2.VehicleEnabledRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
  /v2/vehicle/firmwareSession:
    post:
      tags:
        - üèéÔ∏è V2 Vehicle
      summary: send session billing firmware notification
      operationId: send-session-firmware-notification
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelsv2.FirmwareSession'
        required: true
      responses:
        200:
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Error'
      security:
        - ApiClientKey: []
        - ApiClientId: []
      x-codegen-request-body-name: FirmwareSession
  /v3/user/export:
    post:
      tags:
        - üòÉ User
      summary: Get charging history export for multiple vins
      description: Get charging history export, supports multiple vins
      operationId: get-user-export-v3
      requestBody:
        description: Request Body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/modelsv2.HistoryRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/modelsv2.HistoryExport'
        204:
          content: {}
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/models.Error'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/models.Error'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/models.Error'
      x-codegen-request-body-name: AsyncExportRequest
components:
  schemas:
    bpm.Address:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
        province:
          type: string
        state:
          type: string
    bpm.BillCustomerDetail:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/bpm.Address'
        companyName:
          type: string
        companyNumber:
          type: string
        email:
          type: string
        erpCustomerId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        pecEmail:
          type: string
        privateVatId:
          type: string
        taxId:
          type: string
        type:
          type: string
        uid:
          type: integer
        vatTaxNumber:
          type: string
    bpm.BillingPayload:
      type: object
      properties:
        billToCustomer:
          $ref: '#/components/schemas/bpm.BillCustomerDetail'
        billingFrequency:
          type: string
        chargeSessionDate:
          type: string
        chargeSessionEndDate:
          type: string
        chargeSessionId:
          type: string
        chargingLocation:
          $ref: '#/components/schemas/bpm.ChargeLocationDetail'
        countryCode:
          type: string
        currency:
          type: string
        entityCode:
          type: string
        invoiceSellerNotesText1:
          type: string
        invoiceSellerNotesText2:
          type: string
        isTaxIncluded:
          type: boolean
        locale:
          type: string
        model:
          type: string
        payments:
          type: array
          items:
            $ref: '#/components/schemas/bpm.PaymentDetail'
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/bpm.ChargeSessionDetail'
        sourceSystemCode:
          type: string
        taxOfficeName:
          type: string
        taxPointDate:
          type: string
        vin:
          type: string
    bpm.BillingRq:
      type: object
      properties:
        accessToken:
          type: string
        content:
          $ref: '#/components/schemas/bpm.BillingPayload'
    bpm.BillingRs:
      type: object
      properties:
        attempt:
          type: integer
        createdBy:
          type: string
        createdTimeStamp:
          type: string
        id:
          type: string
        inputs:
          type: object
          properties: {}
        processId:
          type: string
        txnId:
          type: string
    bpm.ChargeLocationDetail:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/bpm.Address'
        chargerProfileDetails1:
          type: string
        chargerProfileDetails2:
          type: string
        name:
          type: string
        trtId:
          type: integer
    bpm.ChargeSessionDetail:
      type: object
      properties:
        quantity:
          type: number
        sessionDescription:
          type: string
        sessionType:
          type: string
        taxReferenceCode:
          type: string
        unitOfMeasure:
          type: string
        unitPrice:
          type: number
    bpm.PaymentDetail:
      type: object
      properties:
        amount:
          type: number
        countryCode:
          type: string
        currencyCode:
          type: string
        donationCode:
          type: string
        lastFourDigits:
          type: string
        paymentDate:
          type: string
        paymentMethod:
          type: string
        paymentStatus:
          type: string
        paymentType:
          type: string
        taxOfficeName:
          type: string
        transactionNumber:
          type: string
    cmp.Attachments:
      type: object
      properties:
        content:
          type: string
        filename:
          type: string
        type:
          type: string
    cmp.Configuration:
      type: object
      properties:
        batchid:
          type: string
        bcc:
          type: array
          items:
            type: string
        cc:
          type: array
          items:
            type: string
        ippoolname:
          type: string
        sendat:
          type: integer
    cmp.Content:
      type: object
      properties:
        html:
          type: string
        preheader:
          type: string
        subjectline:
          type: string
        text:
          type: string
    cmp.From:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    cmp.HeaderMQ:
      type: object
      properties:
        app:
          type: string
        correlationID:
          type: string
        publishTimeInEpoch:
          type: integer
    cmp.Message:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/cmp.Content'
        selection:
          $ref: '#/components/schemas/cmp.Selection'
    cmp.PayloadMQ:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/cmp.Configuration'
        message:
          $ref: '#/components/schemas/cmp.Message'
        recipient:
          $ref: '#/components/schemas/cmp.Recipient'
        sender:
          $ref: '#/components/schemas/cmp.Sender'
    cmp.QueueEmailMessage:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/cmp.HeaderMQ'
        payload:
          $ref: '#/components/schemas/cmp.PayloadMQ'
    cmp.Recipient:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/cmp.Attachments'
        dynamicData:
          type: object
          properties: {}
        to:
          type: string
    cmp.ReplyTo:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    cmp.Selection:
      type: object
      properties:
        groupID:
          type: integer
        locale:
          type: string
        messagetype:
          type: string
        mstemplateid:
          type: integer
        product:
          type: string
        variant:
          type: string
    cmp.Sender:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/cmp.From'
        replyTo:
          $ref: '#/components/schemas/cmp.ReplyTo'
    managersv2.GetSiteByTrtIDRq:
      type: object
      properties:
        id:
          type: integer
        maxPowerKw:
          type: integer
        name:
          type: string
        projectId:
          type: integer
        publicStallCount:
          type: integer
        trtId:
          type: integer
    models.AdditionalDataRq:
      type: object
      properties:
        acquirerApprovalCode:
          type: string
        acquirerTransactionId:
          type: string
        amountPaid:
          type: string
        currencyCode:
          type: string
        customerId:
          type: string
        maskedPan:
          type: string
        transactionTimeStamp:
          type: string
        transactionType:
          type: string
    models.BillingAddress:
      type: object
      properties:
        accountId:
          type: string
        accountType:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        addressId:
          type: string
        addressType:
          type: string
        branchId:
          type: string
        branchName:
          type: string
        city:
          type: string
        companyName:
          type: string
        companyNumber:
          type: string
        countryCode:
          type: string
        county:
          type: string
        einvoicing:
          $ref: '#/components/schemas/models.EfapioInfoRs'
        emailAddress:
          type: string
        firstName:
          type: string
        isSavedBilling:
          type: boolean
        isValidAddress:
          type: boolean
        lastName:
          type: string
        locale:
          type: string
        middleName:
          type: string
        officeType:
          type: string
        passportNumber:
          type: string
        personType:
          type: string
        phoneNumber:
          type: string
        stateProvince:
          type: string
        taxNumber:
          type: string
        taxOfficeName:
          type: string
        zipCode:
          type: string
        zipExtension:
          type: string
    models.BillingAddressUpdate:
      type: object
      properties:
        accountId:
          type: string
        accountType:
          type: string
          description: BUSINESS / PERSONAL
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        addressId:
          type: string
        addressType:
          type: string
        branchId:
          type: string
        branchName:
          type: string
        certEmail:
          type: string
        charityId:
          type: string
        charityName:
          type: string
        city:
          type: string
        companyName:
          type: string
        companyNumber:
          type: string
        countryCode:
          type: string
        county:
          type: string
        emailAddress:
          type: string
        firstName:
          type: string
        invoiceType:
          type: string
        lastName:
          type: string
        locale:
          type: string
        middleName:
          type: string
        officeType:
          type: string
        passportNumber:
          type: string
        personType:
          type: string
        phoneNumber:
          type: string
        privateTaxNumber:
          type: string
        product:
          type: string
        stateProvince:
          type: string
        taxNumber:
          type: string
        taxOfficeName:
          type: string
        userId:
          type: integer
        zipCode:
          type: string
        zipExtension:
          type: string
    models.ChargingLocation:
      type: object
      properties:
        countryCode:
          type: string
        currencyCode:
          type: string
        name:
          type: string
        state:
          type: string
        trtID:
          type: number
    models.CreditFulfillment:
      type: object
      properties:
        benefit_type:
          type: string
        buyer_uid:
          type: integer
        order_reference:
          type: string
        unit:
          type: string
        value:
          type: integer
    models.CurrencyCutoffLimits:
      type: object
      properties:
        limits:
          type: array
          items:
            $ref: '#/components/schemas/models.CutoffLimit'
    models.CutoffLimit:
      type: object
      properties:
        comments:
          type: string
        createDateTime:
          type: string
        createdBy:
          type: string
        currency:
          type: string
        cutoffId:
          type: integer
        holdAmount:
          type: string
        lastUpdateDateTime:
          type: string
        lastUpdatedBy:
          type: string
        limit:
          type: string
    models.DeleteEnforcementEntryRq:
      type: object
      properties:
        enforce:
          type: boolean
        reason:
          type: string
        updatedBy:
          type: string
    models.EfapioInfoRs:
      type: object
      properties:
        address2:
          type: string
        addressType:
          type: string
        certEmail:
          type: string
        charityId:
          type: string
        charityName:
          type: string
        companyName:
          type: string
        companyNumber:
          type: string
        invoiceType:
          type: string
        invoiceUid:
          type: string
        privateVatNumber:
          type: string
        taxOfficeName:
          type: string
        vatNumber:
          type: string
    models.EmailDeliveryNotificationRq:
      type: object
      properties:
        app:
          type: string
        channel:
          type: string
        correlationId:
          type: string
        id:
          type: string
        metadata:
          type: object
          properties: {}
        status:
          type: string
        statusMessage:
          type: string
        time:
          type: string
        to:
          type: string
    models.Enforcement:
      type: object
      properties:
        categoryEnforced:
          type: boolean
        categoryName:
          type: string
        categoryValue:
          type: string
        valueEnforced:
          type: boolean
    models.Error:
      type: object
      properties:
        code:
          type: integer
        errMessage:
          type: string
        message:
          type: string
    models.GetInvoiceByAccountUIDRs:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/models.GroupInvoiceDetailsDBO'
        uid:
          type: integer
    models.GroupInvoiceDetailsDBO:
      type: object
      properties:
        accountUID:
          type: integer
        amountDue:
          type: number
        countryCode:
          type: string
        csvDmsID:
          type: string
        csvFileName:
          type: string
        currencyCode:
          type: string
        dueDate:
          type: string
        groupInvoiceID:
          type: string
        invoiceDmsID:
          type: string
        invoiceFileName:
          type: string
        invoiceGenerationDate:
          type: string
        invoiceNumber:
          type: string
        invoiceType:
          type: string
        languageCode:
          type: string
        paymentID:
          type: string
        paymentProcessFlag:
          type: integer
        paymentStatus:
          type: string
    models.Health:
      type: object
      properties:
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/models.HealthDependency'
        healthy:
          type: boolean
        service:
          type: string
        status:
          type: string
        version:
          type: string
    models.HealthDependency:
      type: object
      properties:
        dependencyName:
          type: string
        healthy:
          type: boolean
    models.InvoiceDetails:
      type: object
      properties:
        amountDue:
          type: number
        billingType:
          type: string
        country:
          type: string
        csvDmsId:
          type: string
        csvFileName:
          type: string
        currency:
          type: string
        dueDate:
          type: string
        invoiceDmsId:
          type: string
        invoiceFileName:
          type: string
        invoiceGenerationDate:
          type: string
        invoiceId:
          type: string
        invoiceNumber:
          type: string
        language:
          type: string
        referenceNumber:
          type: string
        salesOrderNumber:
          type: string
        sessionIdList:
          type: array
          items:
            type: string
        statementGUID:
          type: string
        uid:
          type: integer
    models.InvoiceDocument:
      type: object
      properties:
        eContentId:
          type: string
        eContentSource:
          type: string
        eInvoiceFileName:
          type: string
        invoiceNumber:
          type: string
        invoiceType:
          type: string
    models.InvoiceDocumentRq:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/models.InvoiceDocument'
    models.LocationSearchRs:
      type: object
      properties:
        chargingLocations:
          type: array
          items:
            $ref: '#/components/schemas/models.ChargingLocation'
    models.MetaDataRq:
      type: object
      properties:
        CapturePattern:
          type: string
        activeProfiles:
          type: string
        currencyConverted:
          type: string
        paymentData:
          type: string
    models.NewEnforcementEntryRq:
      type: object
      properties:
        createdBy:
          type: string
        enforce:
          type: boolean
        reason:
          type: string
    models.PPUEnforced:
      type: object
      properties:
        enforced:
          type: boolean
    models.PaymentNotificationRq:
      type: object
      properties:
        additionalData:
          $ref: '#/components/schemas/models.AdditionalDataRq'
        amount:
          type: number
        cancelTransactionNumber:
          type: string
        countryCode:
          type: string
        currencyCode:
          type: string
        decision:
          type: string
        expiryDate:
          type: string
        lastFourDigits:
          type: string
        metadata:
          $ref: '#/components/schemas/models.MetaDataRq'
        orderNumber:
          type: string
        originalDecision:
          type: string
        originalTransactionNumber:
          type: string
        paymentChannel:
          type: string
        paymentReferenceNo:
          type: string
        paymentType:
          type: string
        payorName:
          type: string
        reason:
          type: string
        reasonCode:
          type: string
        refundTransactionNumber:
          type: string
        routingOverridePayload:
          $ref: '#/components/schemas/models.RoutingOverridePayload'
        transactionNumber:
          type: string
        transactionType:
          type: string
        uniqueOrderId:
          type: string
        userProfileId:
          type: string
    models.RoutingOverridePayload:
      type: object
      properties:
        customRoutingParameter:
          type: string
    models.Success:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
    models.UpdateCurrencyCutoffLimit:
      type: object
      properties:
        comments:
          type: string
        holdAmount:
          type: string
        limit:
          type: string
        updateAmountType:
          type: string
        updatedBy:
          type: string
    models.UpdateGroupInvoiceDetails:
      type: object
      properties:
        accountMasterId:
          type: string
        accountUid:
          type: integer
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/models.InvoiceDetails'
    models.UpdateInvoiceDetails:
      type: object
      properties:
        beInvoiceId:
          type: string
        contentId:
          type: string
        contentSource:
          type: string
        invoiceFileName:
          type: string
        invoiceNumber:
          type: string
        processFlag:
          type: integer
        referenceNumber:
          type: string
        salesOrderNumber:
          type: string
    models.UpdateVehicleFlagRq:
      type: object
      properties:
        comments:
          type: string
        disabledStatus:
          type: boolean
        force:
          type: boolean
        statusType:
          type: string
        updatedBy:
          type: string
    models.UpdateVehicleFlagRs:
      type: object
      properties:
        comments:
          type: string
        disabledStatus:
          type: boolean
        statusType:
          type: string
        vin:
          type: string
    modelsv2.AdditionalData:
      type: object
      properties:
        AccountUid:
          type: integer
        BillingType:
          type: string
        CsvDmsId:
          type: string
        CsvFileName:
          type: string
    modelsv2.AggRs:
      type: array
      items:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/modelsv2.AggrData'
          datetime:
            type: string
          doc_count:
            type: number
    modelsv2.AggrData:
      type: object
      properties:
        key:
          type: string
        value:
          type: number
    modelsv2.AggrRs:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.AggrData'
        datetime:
          type: string
        doc_count:
          type: number
    modelsv2.AggregationRequest:
      type: object
      properties:
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.ESAggrRequest'
        granularity:
          type: string
        program_type:
          type: string
        start_datetime:
          type: string
        stop_datetime:
          type: string
        timezone_location:
          type: string
        uid:
          type: integer
        vin:
          type: string
    modelsv2.AggregationRs:
      type: object
      properties:
        aggregations:
          $ref: '#/components/schemas/modelsv2.AggregationsRs'
    modelsv2.AggregationsRs:
      type: object
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/modelsv2.AggRs'
    modelsv2.AppendProductRq:
      type: object
      properties:
        cover_url:
          type: string
        createdBy:
          type: string
        des_url:
          type: string
        description:
          type: string
        duration:
          type: integer
        init_credit:
          type: integer
        sku_code:
          type: string
        trtIds:
          type: array
          items:
            type: integer
    modelsv2.ApplyCreditRs:
      type: object
      properties:
        appliedCashCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CashCredits'
        appliedEnergyCredits:
          type: number
        redemptions:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.FullCreditRedemption'
        remainingCashCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CashCredits'
        remainingEnergyCredits:
          type: number
    modelsv2.ApplyVoucherRs:
      type: object
      properties:
        voucherBar:
          type: string
        voucherKey:
          type: string
        voucherType:
          type: integer
        voucherValue:
          type: string
    modelsv2.ApproveDispute:
      type: object
      properties:
        approved_on:
          type: string
        approver_email_address:
          type: string
        approver_name:
          type: string
        approver_title:
          type: string
        charge_session_id:
          type: string
        comments:
          type: string
        dispute_type:
          type: string
        is_approved:
          type: boolean
    modelsv2.ApproveDisputeRequest:
      type: object
      properties:
        dispute_approve_requests:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.ApproveDispute'
    modelsv2.ApprovedDisputeResponse:
      type: object
      properties:
        charge_session_fee_id:
          type: string
        charge_session_id:
          type: string
        dispute_id:
          type: string
        error:
          $ref: '#/components/schemas/models.Error'
        is_approval_sucessful:
          type: boolean
    modelsv2.AuthorizePaymentRq:
      type: object
      properties:
        authSessionId:
          type: string
          description: 128 Bit correlation id, which will be included in charge_session_object
            along with charge_session_id
        connectorGuid:
          type: string
        evseGuid:
          type: string
        userId:
          type: integer
          description: accountMasterUid / logged in user
    modelsv2.AuthorizePaymentRs:
      type: object
      properties:
        reason:
          type: string
        status:
          type: string
    modelsv2.AvailableCreditsRq:
      type: object
      properties:
        at:
          type: string
        countryCode:
          type: string
        uid:
          type: integer
        vin:
          type: string
    modelsv2.AvailableCreditsRs:
      type: object
      properties:
        distance:
          type: number
        distanceUnit:
          type: string
        energyCredits:
          type: number
        renewableCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.RenewableCredits'
    modelsv2.BalanceRs:
      type: object
      properties:
        balance:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SessionBalanceDetail'
        lastPaymentFailed:
          type: boolean
        ntslaInvolved:
          type: boolean
    modelsv2.BillingCycleDbm:
      type: object
      properties:
        StatementDetails:
          $ref: '#/components/schemas/modelsv2.StatementDBO'
        billingCycleFrequency:
          type: string
        billingCycleGuid:
          type: string
        billingCycleId:
          type: integer
        endDatetimeUtc:
          type: string
        processStatus:
          type: string
        startDatetimeUtc:
          type: string
        timezone:
          type: string
        uid:
          type: integer
    modelsv2.CDCEvent:
      type: object
      properties:
        data:
          type: object
          properties: {}
        type:
          type: string
    modelsv2.CancelCreditRq:
      type: object
      properties:
        buyer_uid:
          type: integer
        cardId:
          type: string
        comments:
          type: string
        requestedBy:
          type: string
    modelsv2.CardExpiredPushNotification:
      type: object
      properties:
        expiryDateMonth:
          type: string
        expiryDateYear:
          type: string
        lastFourDigits:
          type: string
        paymentChannel:
          type: string
        paymentInstrumentType:
          type: string
        userProfileId:
          type: string
    modelsv2.CardInfoRes:
      type: object
      properties:
        cardId:
          type: string
        itemId:
          type: string
    modelsv2.CardInfoRs:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CardInfoRes'
    modelsv2.CashCredits:
      type: object
      properties:
        amount:
          type: number
        currencyCode:
          type: string
    modelsv2.CertResponse:
      type: object
      properties:
        certType:
          type: string
        chainCerts:
          type: string
        endCert:
          type: string
        publicKey:
          type: string
        referenceNumber:
          type: string
        rootCa:
          type: string
    modelsv2.ChargeSession:
      type: object
      properties:
        auth_session_id:
          type: string
        bad_session:
          type: string
        battery_kwh:
          type: number
        billing_calculator_amount:
          type: string
        billing_calculator_version:
          type: string
        bms_battery_kwh:
          type: string
        cabinet_id:
          type: string
        charge_start_date_time:
          type: string
        charge_start_date_time_utc:
          type: string
        charge_stop_date_time:
          type: string
        charge_stop_date_time_utc:
          type: string
        connector_guid:
          type: string
        din:
          type: string
        evse_guid:
          type: string
        faulting_duration:
          type: integer
        frosting_duration:
          type: integer
        git_hash:
          type: string
        hybrid_battery_kwh:
          type: string
        min_high:
          type: number
        min_low:
          type: number
        min_parking:
          type: number
        min_parking_tier1:
          type: number
        min_parking_tier2:
          type: number
        outage_datetime:
          type: string
        ownership_type:
          type: string
        payter_serial_number:
          type: string
        payter_session_id:
          type: string
        post_id:
          type: string
        pricebook_id:
          type: string
        program_type:
          type: string
        sc_sys_battery_kwh:
          type: string
        session_id:
          type: string
        signature:
          type: string
        signature_type:
          type: string
        signed_message:
          type: string
        stem_battery_kwh:
          type: string
        tier1:
          type: string
        tier2:
          type: string
        tier3:
          type: string
        tier4:
          type: string
        trt_id:
          type: integer
        unlatch_date_time:
          type: string
        unlatch_date_time_utc:
          type: string
        vin:
          type: string
    modelsv2.ChargerSessionRequest:
      type: object
      properties:
        charge_session_ids:
          type: array
          items:
            type: string
        end_datetime:
          type: string
        start_datetime:
          type: string
        user_id:
          type: integer
        vin:
          type: string
    modelsv2.ChargingPackage:
      type: object
      properties:
        availableCredit:
          type: number
        benefitType:
          type: string
        cardId:
          type: string
        comments:
          type: string
        coverUrl:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        creditId:
          type: integer
        creditTypeId:
          type: integer
        creditTypeUnit:
          type: string
        desUrl:
          type: string
        expiryDateTime:
          type: string
        inactive:
          type: boolean
        initDateTime:
          type: string
        initialCredit:
          type: number
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        name:
          type: string
        productId:
          type: string
        remainingDistance:
          type: number
        renewalDateTime:
          type: string
        uid:
          type: integer
        vehicleMapId:
          type: string
        vin:
          type: string
    modelsv2.CompletePaymentRq:
      type: object
      properties:
        orderReferenceNumber:
          type: string
        transactionNumber:
          type: string
        uniqueOrderId:
          type: string
        userId:
          type: integer
    modelsv2.CompletePaymentRs:
      type: object
      properties:
        paymentDecision:
          type: string
    modelsv2.Configuration:
      type: object
      properties:
        disableNotification:
          type: boolean
        metadata:
          type: object
          properties: {}
    modelsv2.Connectors:
      type: object
      properties:
        amperage:
          type: integer
        connector_guid:
          type: string
        format:
          type: string
        last_updated:
          type: string
        power_type:
          type: string
        standard:
          type: string
        tariff_id:
          type: string
        voltage:
          type: integer
    modelsv2.CooperationCreditRq:
      type: object
      properties:
        buyer_uid:
          type: integer
        enterprise_key:
          type: string
        expiry_datetime:
          type: string
        init_datetime:
          type: string
        item_list:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.OrderList'
        order_reference:
          type: string
        skucode:
          type: string
        total_amount:
          type: number
        total_credit_quantity:
          type: number
    modelsv2.CreditDbm:
      type: object
      properties:
        availableCredit:
          type: number
        benefitType:
          type: string
        comments:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        creditId:
          type: integer
        creditTypeId:
          type: integer
        creditTypeUnit:
          type: string
        expiryDateTime:
          type: string
        inactive:
          type: boolean
        initDateTime:
          type: string
        initialCredit:
          type: number
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        productId:
          type: string
        remainingDistance:
          type: number
        renewalDateTime:
          type: string
        uid:
          type: integer
        vehicleMapId:
          type: string
        vin:
          type: string
    modelsv2.CreditExpiryDateUpdate:
      type: object
      properties:
        blame:
          type: string
        creditIds:
          type: array
          items:
            type: integer
        expiryDate:
          type: string
        uid:
          type: integer
    modelsv2.CreditHistoryRs:
      type: object
      properties:
        avgInitialCredit:
          type: number
        avgInitialDistance:
          type: number
        distanceUnit:
          type: string
        remainingDistance:
          type: number
        totalAvailableCredit:
          type: number
        totalInitialCredit:
          type: number
        totalInitialDistance:
          type: number
        userCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.UserCredit'
    modelsv2.CreditRedemption:
      type: object
      properties:
        chargeSessionId:
          type: string
        creditId:
          type: integer
        creditTypeId:
          type: integer
        creditTypeUnit:
          type: string
        creditsApplied:
          type: number
        creditsRemaining:
          type: string
        distanceApplied:
          type: string
        distanceUnit:
          type: string
        distanceremaining:
          type: string
        initialCredit:
          type: number
        redemptionDateTime:
          type: string
        sessionFeeId:
          type: string
    modelsv2.CycleDocProcessingRs:
      type: object
      properties:
        failedStatements:
          type: integer
        processedStatements:
          type: integer
    modelsv2.DisplayText:
      type: object
      properties:
        language:
          type: string
        text:
          type: string
    modelsv2.DisputeDbm:
      type: object
      properties:
        approvedDateTime:
          type: string
        approverComments:
          type: string
        approverEmailAddress:
          type: string
        approverName:
          type: string
        approverTitle:
          type: string
        comments:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        decision:
          type: string
        decisionDateTime:
          type: string
        disputeID:
          type: integer
        disputeType:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        requestedDateTime:
          type: string
        requestorComments:
          type: string
        requestorEmailAddress:
          type: string
        requestorName:
          type: string
        requestorTitle:
          type: string
        status:
          type: string
        transactionNumber:
          type: string
    modelsv2.ESAggrRequest:
      type: object
      properties:
        field:
          type: string
        name:
          type: string
        type:
          type: string
    modelsv2.EligibilityRq:
      type: object
      properties:
        customerUid:
          type: integer
        ruleId:
          type: string
    modelsv2.EnforceableCategory:
      type: object
      properties:
        category:
          type: string
        enforce:
          type: boolean
    modelsv2.EshopCreditRq:
      type: object
      properties:
        buyer_uid:
          type: integer
        channel:
          type: string
        item_list:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.Lineitems'
        order_reference:
          type: string
        source:
          type: string
    modelsv2.Evses:
      type: object
      properties:
        capabilities:
          type: array
          items:
            type: string
        connectors:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.Connectors'
        coordinates:
          $ref: '#/components/schemas/modelsv2.Geolocation'
        evse_guid:
          type: string
        floor_level:
          type: string
        last_updated:
          type: string
        physical_reference:
          type: string
        power_outlet_id:
          type: string
        status:
          type: string
        status_schedule:
          type: array
    modelsv2.FapiaoAddress:
      type: object
      properties:
        Address1:
          type: string
        Address2:
          type: string
        City:
          type: string
        Country:
          type: string
        District:
          type: string
        PhoneNumber:
          type: string
        PostalCode:
          type: string
        Province:
          type: string
        State:
          type: string
    modelsv2.FapiaoDetail:
      type: object
      properties:
        fapiaoRef:
          type: string
        fapiaoSource:
          type: string
        fapiaoType:
          type: string
        fileInfo:
          type: string
        status:
          type: string
    modelsv2.FirmwareSession:
      type: object
      properties:
        bad_session:
          type: boolean
        charge_start_date_time:
          type: string
        charge_uom:
          type: string
        credits_remaining:
          type: number
        currency_code:
          type: string
        kwh_used:
          type: number
        ppu_customer:
          type: boolean
        service_session:
          type: boolean
        session_id:
          type: string
        site_id:
          type: integer
        site_name:
          type: string
        total_amt:
          type: number
        total_kwh:
          type: number
        total_min_high:
          type: number
        total_min_low:
          type: number
        total_parking:
          type: number
        total_tax:
          type: number
        vin:
          type: string
    modelsv2.FlagUpdate:
      type: object
      properties:
        reason:
          type: string
        status:
          type: boolean
        type:
          type: string
    modelsv2.ForfeitCreditsRq:
      type: object
      properties:
        comments:
          type: string
        lastUpdatedBy:
          type: string
        uid:
          type: integer
    modelsv2.From:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    modelsv2.FullCreditRedemption:
      type: object
      properties:
        chargeSessionID:
          type: string
        comments:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        creditID:
          type: integer
        creditRedemptionID:
          type: integer
        creditTypeID:
          type: integer
        creditTypeUnit:
          type: string
        creditsApplied:
          type: number
        creditsRemaining:
          type: string
        distanceApplied:
          type: string
        distanceRemaining:
          type: string
        distanceUnit:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        redemptionDateTime:
          type: string
        sessionFeeID:
          type: string
        sessionId:
          type: integer
    modelsv2.Geolocation:
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
    modelsv2.GetCDRsResp:
      type: object
      properties:
        cdrs:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SessionCDRDbm'
        count:
          type: integer
    modelsv2.GetLocationsResp:
      type: object
      properties:
        count:
          type: integer
        locations:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.Location'
    modelsv2.GetReceiptRq:
      type: object
      properties:
        sessionID:
          type: string
    modelsv2.GetReceiptRs:
      type: object
      properties:
        authSessionID:
          type: string
        chargeSessionID:
          type: string
        countryCode:
          type: string
        currencyCode:
          type: string
        fees:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.HistoryFee'
        name:
          type: string
        netDue:
          type: string
        programType:
          type: string
        receiptPdfDmsID:
          type: string
        receiptValidationHash:
          type: string
        startDatetime:
          type: string
        stopDatetime:
          type: string
        timezone:
          type: string
        totalDue:
          type: string
        totalTax:
          type: string
        trtID:
          type: integer
        uid:
          type: string
        unlatchDatetime:
          type: string
        vehicleMakeType:
          type: string
    modelsv2.GetSitePricingsResp:
      type: object
      properties:
        count:
          type: integer
        pricings:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SitePricings'
    modelsv2.Header:
      type: object
      properties:
        app:
          type: string
        correlationID:
          type: string
        publishTimeInEpoch:
          type: integer
    modelsv2.HistoryCredit:
      type: object
      properties:
        distance:
          type: number
        distanceUnit:
          type: string
        energyApplied:
          type: number
    modelsv2.HistoryExport:
      type: object
      properties:
        data:
          type: array
          items:
            type: integer
    modelsv2.HistoryFee:
      type: object
      properties:
        currencyCode:
          type: string
        feeType:
          type: string
        isPaid:
          type: boolean
        netDue:
          type: number
        pricingType:
          type: string
        processFlagId:
          type: integer
        rateBase:
          type: number
        rateTier1:
          type: number
        rateTier2:
          type: number
        rateTier3:
          type: string
        rateTier4:
          type: string
        sessionFeeId:
          type: integer
        status:
          type: string
        totalBase:
          type: number
        totalDue:
          type: number
        totalTier1:
          type: number
        totalTier2:
          type: number
        totalTier3:
          type: number
        totalTier4:
          type: number
        uid:
          type: integer
        uom:
          type: string
        usageBase:
          type: number
        usageTier1:
          type: number
        usageTier2:
          type: number
        usageTier3:
          type: string
        usageTier4:
          type: string
    modelsv2.HistoryInvoice:
      type: object
      properties:
        beInvoiceId:
          type: string
        contentId:
          type: string
        fileName:
          type: string
        invoiceType:
          type: string
    modelsv2.HistoryItem:
      type: object
      properties:
        billingType:
          type: string
        cabinetId:
          type: string
        chargeSessionId:
          type: string
        chargeStartDateTime:
          type: string
        chargeStopDateTime:
          type: string
        chargingPackage:
          $ref: '#/components/schemas/modelsv2.HistoryCredit'
        chargingSiteType:
          type: string
          description: '"Landlord Owned" ChargingSiteType in cn cannot apply fapiao'
        chargingVoucher:
          $ref: '#/components/schemas/modelsv2.HistoryVoucher'
        countryCode:
          type: string
        credit:
          $ref: '#/components/schemas/modelsv2.HistoryCredit'
        din:
          type: string
        disputeDetails:
          $ref: '#/components/schemas/modelsv2.DisputeDbm'
        fapiaoDetails:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.FapiaoDetail'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.HistoryFee'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.HistoryInvoice'
        isDcEnforced:
          type: boolean
        isMsp:
          type: boolean
        postId:
          type: string
        programType:
          type: string
        sessionId:
          type: integer
        siteLocalizedName:
          type: string
        siteLocationName:
          type: string
        surveyCompleted:
          type: string
        surveyType:
          type: string
        trtId:
          type: integer
        unlatchDateTime:
          type: string
        vehicleMakeType:
          type: string
        vin:
          type: string
    modelsv2.HistoryPaginationRs:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/modelsv2.HistoryRs'
        query:
          type: object
          properties: {}
        totalResults:
          type: number
    modelsv2.HistoryRequest:
      type: object
      properties:
        emailAddress:
          type: string
        endTime:
          type: string
        startTime:
          type: string
        uid:
          type: integer
        vehicleTypes:
          type: array
          items:
            type: string
            enum:
              - TSLA
              - NTSLA
        vins:
          type: array
          items:
            type: string
    modelsv2.HistoryRs:
      type: array
      items:
        type: object
        properties:
          billingType:
            type: string
          cabinetId:
            type: string
          chargeSessionId:
            type: string
          chargeStartDateTime:
            type: string
          chargeStopDateTime:
            type: string
          chargingPackage:
            $ref: '#/components/schemas/modelsv2.HistoryCredit'
          chargingSiteType:
            type: string
            description: '"Landlord Owned" ChargingSiteType in cn cannot apply fapiao'
          chargingVoucher:
            $ref: '#/components/schemas/modelsv2.HistoryVoucher'
          countryCode:
            type: string
          credit:
            $ref: '#/components/schemas/modelsv2.HistoryCredit'
          din:
            type: string
          disputeDetails:
            $ref: '#/components/schemas/modelsv2.DisputeDbm'
          fapiaoDetails:
            type: array
            items:
              $ref: '#/components/schemas/modelsv2.FapiaoDetail'
          fees:
            type: array
            items:
              $ref: '#/components/schemas/modelsv2.HistoryFee'
          invoices:
            type: array
            items:
              $ref: '#/components/schemas/modelsv2.HistoryInvoice'
          isDcEnforced:
            type: boolean
          isMsp:
            type: boolean
          postId:
            type: string
          programType:
            type: string
          sessionId:
            type: integer
          siteLocalizedName:
            type: string
          siteLocationName:
            type: string
          surveyCompleted:
            type: string
          surveyType:
            type: string
          trtId:
            type: integer
          unlatchDateTime:
            type: string
          vehicleMakeType:
            type: string
          vin:
            type: string
    modelsv2.HistoryVoucher:
      type: object
      properties:
        voucherBar:
          type: string
        voucherKey:
          type: string
        voucherType:
          type: string
        voucherValue:
          type: string
    modelsv2.HoldAmountRs:
      type: object
      properties:
        currencyCode:
          type: string
        holdAmount:
          type: string
    modelsv2.InitCredentialsToken:
      type: object
      properties:
        interface:
          type: string
          description: '"receiver"'
        name:
          type: string
          description: '"GIREVE"'
        receiverRole:
          type: string
          enum:
            - cpo
            - emsp
        senderRole:
          type: string
          enum:
            - cpo
            - emsp
            - hub
        token:
          type: string
          description: '"xxx-xxx-xxx"'
        versionEndpoint:
          type: string
    modelsv2.InitOperatorLink:
      type: object
      properties:
        countryCode:
          type: string
          description: '"FR"'
        credentialName:
          type: string
          description: '"GRIEVE"'
        partyId:
          type: string
          description: '"MSP"'
        role:
          type: string
          description: '"EMSP"'
        uid:
          type: integer
          description: '"8888"'
    modelsv2.InitializeCreditsRq:
      type: object
      properties:
        deliveryDate:
          type: string
        model:
          type: string
        orderDate:
          type: string
        status:
          type: string
        subStatus:
          type: string
        uid:
          type: integer
        vehicleMapId:
          type: integer
        vin:
          type: string
    modelsv2.InitiateDispute:
      type: object
      properties:
        charge_session_id:
          type: string
        comments:
          type: string
        dispute_type:
          type: string
        reason:
          type: string
        requested_on:
          type: string
        requestor_email_address:
          type: string
        requestor_name:
          type: string
        requestor_title:
          type: string
    modelsv2.InitiateDisputeRequest:
      type: object
      properties:
        dispute_initiate_requests:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.InitiateDispute'
    modelsv2.InvoiceNotification:
      type: object
      properties:
        AdditionalData:
          $ref: '#/components/schemas/modelsv2.AdditionalData'
        CountryCode:
          type: string
        CurrencyCode:
          type: string
        DmsReferenceId:
          type: string
        DocumentTypeCode:
          type: string
        ERPCustomerID:
          type: integer
        FileName:
          type: string
        InvoiceDate:
          type: string
        InvoiceDueDate:
          type: string
        InvoiceEntityCode:
          type: string
        InvoiceId:
          type: string
        InvoiceNumber:
          type: string
        IsProformaInvoice:
          type: boolean
        Language:
          type: string
        Locale:
          type: string
        OrderReferenceNumber:
          type: string
        OriginalInvoiceId:
          type: string
        PaymentIds:
          type: array
          items:
            type: string
        ReferenceNumber:
          type: string
        RelatedInvoiceId:
          type: string
        TotalAmountDue:
          type: number
        UniqueIds:
          type: array
          items:
            type: string
    modelsv2.InvoiceStatementRs:
      type: object
      properties:
        statements:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.StatementDetails'
        uid:
          type: integer
    modelsv2.JSONCoords:
      required:
        - lat
        - lng
      type: object
      properties:
        lat:
          type: number
        lng:
          type: number
    modelsv2.JSONRate:
      required:
        - calculation_scheme
        - id
      type: object
      properties:
        calculation_scheme:
          type: string
        currency:
          type: string
        effective_date:
          type: string
        id:
          type: integer
        total_rate_kwh:
          type: string
        total_rate_min_high:
          type: string
        total_rate_min_low:
          type: string
        total_rate_min_tier_0_to_60:
          type: string
        total_rate_min_tier_60_to_100:
          type: string
        total_rate_min_tier_100_to_180:
          type: string
        total_rate_min_tier_180_to_inf:
          type: string
        total_rate_parking:
          type: string
        total_rate_parking_high:
          type: string
        total_rate_parking_low:
          type: string
        tou_rates:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.JSONTouRate'
    modelsv2.JSONTouRate:
      type: object
      properties:
        days:
          type: string
        end_time:
          type: string
        rate_kwh:
          type: string
        rate_min_high:
          type: string
        rate_min_low:
          type: string
        start_time:
          type: string
    modelsv2.LatestSessionRs:
      type: object
      properties:
        cabinetId:
          type: string
        chargeSessionId:
          type: string
        chargeStartDateTime:
          type: string
        din:
          type: string
        postId:
          type: string
        programType:
          type: string
        sessionId:
          type: integer
        siteLocationName:
          type: string
        surveyCompleted:
          type: string
        surveyType:
          type: string
        trtId:
          type: integer
        vehicleMakeType:
          type: string
        vin:
          type: string
    modelsv2.LegacyApplyCreditRq:
      type: object
      properties:
        availableCredit:
          type: number
        benefitType:
          type: string
        comments:
          type: string
        distanceUnit:
          type: string
        expiryDateTime:
          type: string
        initialCredit:
          type: number
        initialDistance:
          type: number
        referenceNumber:
          type: string
        requestedBy:
          type: string
        uid:
          type: integer
    modelsv2.LegacyRedemptionRs:
      type: object
      properties:
        redemptions:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CreditRedemption'
    modelsv2.LegacyUpdateCreditRq:
      type: object
      properties:
        availableCredit:
          type: number
        creditId:
          type: integer
        requestedBy:
          type: string
        uid:
          type: integer
    modelsv2.Lineitems:
      type: object
      properties:
        itemID:
          type: string
        skucode:
          type: string
        startDate:
          type: string
    modelsv2.Location:
      type: object
      properties:
        access_hours:
          type: string
        address:
          type: string
        city:
          type: string
        coordinates:
          $ref: '#/components/schemas/modelsv2.Geolocation'
        country:
          type: string
        directions:
          $ref: '#/components/schemas/modelsv2.DisplayText'
        evses:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.Evses'
        last_updated:
          type: string
        location_guid:
          type: string
        name:
          type: string
        postal_code:
          type: string
        state:
          type: string
        time_zone:
          type: string
        type:
          type: string
    modelsv2.Message:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/modelsv2.Selection'
    modelsv2.MessageRq:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/modelsv2.Header'
        payload:
          $ref: '#/components/schemas/modelsv2.Payload'
    modelsv2.NtslaSessionDetail:
      type: array
      items:
        type: object
        properties:
          auth_session_id:
            type: string
          charge_session_id:
            type: string
          country_code:
            type: string
          hold_status:
            type: string
          name:
            type: string
          request_time:
            type: string
    modelsv2.NtslaSessionDetails:
      type: object
      properties:
        auth_session_id:
          type: string
        charge_session_id:
          type: string
        country_code:
          type: string
        hold_status:
          type: string
        name:
          type: string
        request_time:
          type: string
    modelsv2.OfflinePaymentRq:
      type: object
      properties:
        amount:
          type: number
        countryCode:
          type: string
        currencyCode:
          type: string
        invoiceIds:
          type: array
          items:
            type: integer
        purchaseChannel:
          type: string
        sessionFeeIds:
          type: array
          items:
            type: integer
        statementIds:
          type: array
          items:
            type: integer
        userId:
          type: integer
    modelsv2.OfflinePaymentRs:
      type: object
      properties:
        orderReferenceNumber:
          type: string
        signedToken:
          type: string
        uniqueOrderId:
          type: string
    modelsv2.OrderList:
      type: object
      properties:
        credit_quantity:
          type: number
        owner_uid:
          type: integer
    modelsv2.PacketFile:
      type: object
      properties:
        dmsFileTypeUuid:
          type: string
        dmsFileUuid:
          type: string
        dmsFileVersion:
          type: integer
        dmsInstance:
          type: string
        fileName:
          type: string
    modelsv2.PayNowRq:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.PaymentRq'
        uid:
          type: integer
    modelsv2.Payload:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/modelsv2.Configuration'
        message:
          $ref: '#/components/schemas/modelsv2.Message'
        recipient:
          $ref: '#/components/schemas/modelsv2.Recipient'
        sender:
          $ref: '#/components/schemas/modelsv2.Sender'
    modelsv2.PaymentDbm:
      type: object
      properties:
        comments:
          type: string
        countryCode:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        currencyCode:
          type: string
        idempotentKey:
          type: string
        lastFourDigits:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        orderReferenceNumber:
          type: string
        paymentId:
          type: integer
        paymentMethod:
          type: string
        paymentReferenceNumber:
          type: string
        paymentType:
          type: string
        status:
          type: string
        totalAmount:
          type: number
        transactionNumber:
          type: string
        uid:
          type: integer
        uniqueOrderId:
          type: string
    modelsv2.PaymentPreAuthDbm:
      type: object
      properties:
        authSessionId:
          type: string
        authType:
          type: string
        authorizationRef:
          type: string
        comments:
          type: string
        connectorGuid:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        evseGuid:
          type: string
        isValid:
          type: string
        label:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        paymentID:
          type: string
        paymentPreAuthId:
          type: integer
        postID:
          type: string
        priceBookID:
          type: string
        programType:
          type: string
        referenceNumber:
          type: string
        roamingPassID:
          type: string
        status:
          type: string
        trtID:
          type: string
        uid:
          type: integer
        vin:
          type: string
    modelsv2.PaymentRq:
      type: object
      properties:
        amount:
          type: number
        countryCode:
          type: string
        currencyCode:
          type: string
        sessionFeeIds:
          type: array
          items:
            type: integer
    modelsv2.PaymentRs:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.PaymentDbm'
        success:
          type: boolean
    modelsv2.ProcessSessionResult:
      type: object
      properties:
        billingCycleDetails:
          $ref: '#/components/schemas/modelsv2.BillingCycleDbm'
        billingResponse:
          type: array
          items:
            $ref: '#/components/schemas/bpm.BillingRs'
        creditRedemptions:
          $ref: '#/components/schemas/modelsv2.ApplyCreditRs'
        emailRequests:
          type: array
          items:
            $ref: '#/components/schemas/cmp.QueueEmailMessage'
        enforce:
          $ref: '#/components/schemas/modelsv2.EnforceableCategory'
        firmwareSession:
          $ref: '#/components/schemas/modelsv2.FirmwareSession'
        isMsp:
          type: boolean
        payments:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.PaymentDbm'
        registeredSession:
          $ref: '#/components/schemas/modelsv2.PaymentPreAuthDbm'
        session:
          $ref: '#/components/schemas/modelsv2.Session'
        site:
          $ref: '#/components/schemas/modelsv2.Site'
        vehicle:
          $ref: '#/components/schemas/modelsv2.Vehicle'
        vehicleFlags:
          $ref: '#/components/schemas/modelsv2.VehicleFlagsDbm'
        voucherRedemptions:
          $ref: '#/components/schemas/modelsv2.ApplyVoucherRs'
    modelsv2.Recipient:
      type: object
      properties:
        countryISO2:
          type: string
        dynamicData:
          type: object
          properties: {}
        to:
          type: string
    modelsv2.RedeemCreditsRq:
      type: object
      properties:
        batteryKwh:
          type: number
        chargeSessionId:
          type: string
        chargeStartTime:
          type: string
        currencyCode:
          type: string
        deliveryDate:
          type: string
        minHigh:
          type: number
        minLow:
          type: number
        model:
          type: string
        orderDate:
          type: string
        rateBase:
          type: number
        rateTier1:
          type: number
        rateTier2:
          type: number
        status:
          type: string
        subStatus:
          type: string
        totalBase:
          type: number
        totalDue:
          type: number
        totalTier1:
          type: number
        totalTier2:
          type: number
        uid:
          type: integer
        uom:
          type: string
        vehicleMapId:
          type: integer
        vin:
          type: string
    modelsv2.RedeemCreditsRs:
      type: object
      properties:
        appliedCashCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CashCredits'
        appliedEnergyCredits:
          type: number
        redemptions:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.FullCreditRedemption'
        remainingCashCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CashCredits'
        remainingEnergyCredits:
          type: number
        totalBase:
          type: number
        totalDue:
          type: number
        totalTier1:
          type: number
        totalTier2:
          type: number
    modelsv2.RenewableCredits:
      type: object
      properties:
        cashCredits:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.CashCredits'
        distance:
          type: number
        distanceUnit:
          type: string
        energyCredits:
          type: number
        renewalDate:
          type: string
        vin:
          type: string
    modelsv2.ReportRevenueRq:
      type: object
      properties:
        order_reference:
          type: string
    modelsv2.RequestFapiaoContact:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/modelsv2.FapiaoAddress'
        Email:
          type: string
        FirstName:
          type: string
        FullName:
          type: string
        LastName:
          type: string
        Phone:
          type: string
    modelsv2.RequestFapiaoRq:
      type: object
      properties:
        ChargeSessionIds:
          type: array
          items:
            type: string
        CompanyVatId:
          type: string
        Contact:
          $ref: '#/components/schemas/modelsv2.RequestFapiaoContact'
        CustomerType:
          type: string
        EInvoiceTitle:
          type: string
        FapiaoType:
          type: string
        MailAddress:
          type: string
        PurchaserAddress:
          type: string
        PurchaserBankAccount:
          type: string
        PurchaserBankName:
          type: string
        PurchaserPhoneNumber:
          type: string
        Remarks:
          type: string
        Uid:
          type: integer
    modelsv2.ResponseObject:
      type: object
      properties:
        ObjectId:
          type: string
        PacketFile:
          $ref: '#/components/schemas/modelsv2.PacketFile'
        PacketId:
          type: string
        PacketType:
          type: string
        SerialNumber:
          type: string
    modelsv2.RoamingMessageRq:
      type: object
      properties:
        groupId:
          type: integer
        messageTypes:
          type: array
          items:
            type: string
        userId:
          type: integer
        variant:
          type: string
        visualCardId:
          type: string
    modelsv2.SaveCertReq:
      type: object
      properties:
        cert:
          type: string
        public_key:
          type: string
        raw_data:
          type: object
          properties: {}
        reference_number:
          type: string
        type:
          type: string
    modelsv2.SaveStatementRq:
      type: object
      properties:
        accountMasterId:
          type: string
        accountUid:
          type: integer
        statements:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.Statements'
    modelsv2.SearchReceiptsRq:
      type: object
      properties:
        amountDue:
          type: number
        countryCode:
          type: string
        eventDate:
          type: string
        lastFourDigit:
          type: string
        siteName:
          type: string
        trtID:
          type: integer
    modelsv2.Selection:
      type: object
      properties:
        defaultLocale:
          type: string
        groupID:
          type: integer
        messageSubType:
          type: string
        product:
          type: string
        variant:
          type: string
    modelsv2.Sender:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/modelsv2.From'
        user:
          $ref: '#/components/schemas/modelsv2.User'
    modelsv2.Session:
      type: object
      properties:
        authSessionId:
          type: string
        badSession:
          type: string
        badSessionReason:
          type: string
        billingCalculatorVersion:
          type: string
        cabinetId:
          type: string
        chargeSessionId:
          type: string
        comments:
          type: string
        connectorGuid:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        din:
          type: string
        evseGuid:
          type: string
        faultingDuration:
          type: string
        fees:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SessionFeeDbm'
        firmwareSync:
          type: string
        frostingDuration:
          type: string
        isDcEnforced:
          type: boolean
        isEnterprise:
          type: string
        isMsp:
          type: string
        isUnlimited:
          type: string
        label:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        meterId:
          type: string
        model:
          type: string
        optionCode:
          type: string
        outageDateTime:
          type: string
        ownershipType:
          type: string
        postId:
          type: string
        programType:
          type: string
        serviceSession:
          type: string
        sessionId:
          type: integer
        signature:
          type: string
        signatureType:
          type: string
        signedMessage:
          type: string
        siteId:
          type: integer
        startDateTime:
          type: string
        stopDateTime:
          type: string
        terminalSerialNumber:
          type: string
        trtId:
          type: string
        unlatchDateTime:
          type: string
        vehicleMapId:
          type: string
        vin:
          type: string
    modelsv2.SessionBalanceDetail:
      type: object
      properties:
        amount:
          type: number
        countryCode:
          type: string
        currencyCode:
          type: string
        sessionFeeIds:
          type: array
          items:
            type: integer
    modelsv2.SessionCDRDbm:
      type: object
      properties:
        cdr:
          type: string
        created_at:
          type: string
        created_by:
          type: string
        modified_at:
          type: string
        modified_by:
          type: string
        ocpi_credential_id:
          type: integer
        ocpi_operator_id:
          type: integer
        process_flag:
          type: integer
        session_cdr_id:
          type: integer
        session_id:
          type: integer
        type:
          type: string
        version:
          type: string
    modelsv2.SessionEventRq:
      type: object
      properties:
        authSessionId:
          type: string
        connectorGuid:
          type: string
        evseGuid:
          type: string
        postLabel:
          type: string
        pricebookId:
          type: string
        programType:
          type: string
        startDatetime:
          type: string
        trtId:
          type: integer
        vehicleType:
          type: string
        vin:
          type: string
    modelsv2.SessionEventRs:
      type: object
      properties:
        success:
          type: boolean
    modelsv2.SessionFeeDbm:
      type: object
      properties:
        addressId:
          type: string
        billingType:
          type: string
        calculatedBase:
          type: number
        calculatedDue:
          type: number
        calculatedTier1:
          type: number
        calculatedTier2:
          type: number
        calculatedTier3:
          type: string
        calculatedTier4:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        currencyCode:
          type: string
        customerUid:
          type: string
        effectivePriceBookID:
          type: string
        enery_type:
          type: string
        feeTypeId:
          type: integer
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        netDue:
          type: string
        priceBookId:
          type: integer
        pricingType:
          type: string
        processFlagId:
          type: string
        rateBase:
          type: number
        rateTier1:
          type: number
        rateTier2:
          type: number
        rateTier3:
          type: string
        rateTier4:
          type: string
        sessionFeeId:
          type: integer
        sessionId:
          type: integer
        tierType:
          type: integer
        totalBase:
          type: string
        totalDue:
          type: string
        totalTax:
          type: string
        totalTier1:
          type: string
        totalTier2:
          type: string
        totalTier3:
          type: string
        totalTier4:
          type: string
        touUsed:
          type: boolean
        uid:
          type: string
        uom:
          type: string
        usage_bms:
          type: string
        usage_hybrid:
          type: string
        usage_sc_sys:
          type: string
        usage_signed_stem:
          type: string
        usage_stem:
          type: string
        usageBase:
          type: number
        usageTier1:
          type: number
        usageTier2:
          type: number
        usageTier3:
          type: string
        usageTier4:
          type: string
    modelsv2.SessionPriceRs:
      type: object
      properties:
        currency:
          type: string
        value:
          type: number
    modelsv2.SessionRegisterRq:
      type: object
      properties:
        authRef:
          type: string
        authSessionId:
          type: string
        authStatus:
          type: string
        authType:
          type: string
        connectorGuid:
          type: string
        evseGuid:
          type: string
        label:
          type: string
        postId:
          type: string
        pricebookId:
          type: integer
        programType:
          type: string
        roamingPassId:
          type: string
        trtId:
          type: integer
        uid:
          type: integer
        vin:
          type: string
        flowType:
          type: string
    modelsv2.SessionRegisterRs:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/models.Error'
        valid:
          type: boolean
        authSessionId:
          type: string
    modelsv2.SessionSignedData:
      type: object
      properties:
        data:
          type: array
          items:
            type: integer
    modelsv2.SetVehicleFlagsRq:
      type: object
      properties:
        blame:
          type: string
        comments:
          type: string
        updates:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.FlagUpdate'
        vin:
          type: string
    modelsv2.Site:
      type: object
      properties:
        accessCode:
          type: string
        accessHours:
          type: string
        accessType:
          type: string
        actualLatitude:
          type: string
        actualLongitude:
          type: string
        address1:
          type: string
        address2:
          type: string
        amenities:
          type: string
        chargerType:
          type: string
        chargingAccessibility:
          type: string
        chargingSiteType:
          type: string
        city:
          type: string
        commonSiteName:
          type: string
        connectors:
          type: string
        countryCode:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        currencyCode:
          type: string
        destinationWebsite:
          type: string
        district:
          type: string
        effectivePricebookID:
          type: string
        elevation:
          type: string
        entityCode:
          type: string
        entryLatitude:
          type: string
        entryLongitude:
          type: string
        equipment:
          $ref: '#/components/schemas/modelsv2.SiteEquipmentDbm'
        expectedOpenDate:
          type: string
        externalID:
          type: string
        fastchargeDbID:
          type: string
        goingOnUI:
          type: string
        goingOnWebsite:
          type: string
        landlordName:
          type: string
        landlordTaxID:
          type: string
        lastRefreshedAt:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        localizedName:
          type: string
        locationGUID:
          type: string
        locationVerified:
          type: string
        maxPower:
          type: string
        name:
          type: string
        navInstructions:
          type: string
        nearestEntrance:
          type: string
        openToPublic:
          type: string
        parkingFeeDetails:
          type: string
        postalCode:
          type: string
        postalExt:
          type: string
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SitePricingDbm'
        projectID:
          type: string
        publicStallCount:
          type: string
        qbname:
          type: string
        siteID:
          type: integer
        source:
          type: string
        stateProvince:
          type: string
        timezone:
          type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SiteTranslationDbm'
        trtID:
          type: integer
    modelsv2.SiteEquipmentDbm:
      type: object
      properties:
        access_instruction:
          type: string
        access_restriction:
          type: string
        access_type:
          type: string
        charger_type:
          type: string
        charging_accessibility:
          type: string
        charging_site_type:
          type: string
        connectors:
          type: string
        created_at:
          type: string
        created_by:
          type: string
        expected_open_date:
          type: string
        fastchargedb_id:
          type: string
        going_on_ui:
          type: string
        going_on_website:
          type: string
        is_ppu_enabled:
          type: string
        last_updated_at:
          type: string
        last_updated_by:
          type: string
        locale:
          type: string
        location_guid:
          type: string
        max_power:
          type: string
        open_to_public:
          type: string
        phone_number:
          type: string
        project_id:
          type: string
        project_type:
          type: string
        public_stall_count:
          type: string
        qb_name:
          type: string
        site_equipment_id:
          type: integer
        site_id:
          type: string
        trt_id:
          type: string
    modelsv2.SiteInfoRs:
      type: object
      properties:
        accessCode:
          type: string
        accessHours:
          type: string
        accessType:
          type: string
        actualLatitude:
          type: string
        actualLongitude:
          type: string
        address1:
          type: string
        address2:
          type: string
        amenities:
          type: string
        chargerType:
          type: string
        chargingAccessibility:
          type: string
        chargingSiteType:
          type: string
        city:
          type: string
        commonSiteName:
          type: string
        connectors:
          type: string
        countryCode:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        currencyCode:
          type: string
        destinationWebsite:
          type: string
        district:
          type: string
        elevation:
          type: string
        entityCode:
          type: string
        entryLatitude:
          type: string
        entryLongitude:
          type: string
        expectedOpenDate:
          type: string
        externalID:
          type: string
        fastchargeDbID:
          type: string
        goingOnUI:
          type: string
        goingOnWebsite:
          type: string
        isDcEnforced:
          type: boolean
        landlordName:
          type: string
        landlordTaxID:
          type: string
        lastRefreshedAt:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        localizedName:
          type: string
        locationGUID:
          type: string
        locationVerified:
          type: string
        maxPower:
          type: string
        name:
          type: string
        navInstructions:
          type: string
        nearestEntrance:
          type: string
        openToPublic:
          type: string
        parkingFeeDetails:
          type: string
        postalCode:
          type: string
        postalExt:
          type: string
        program_type:
          type: string
        projectID:
          type: string
        publicStallCount:
          type: string
        qbname:
          type: string
        siteID:
          type: integer
        source:
          type: string
        stateProvince:
          type: string
        timezone:
          type: string
        trtID:
          type: integer
    modelsv2.SiteInfoRsV2:
      type: object
      properties:
        accessCode:
          type: string
        accessType:
          type: string
        actualLatitude:
          type: string
        actualLongitude:
          type: string
        address1:
          type: string
        address2:
          type: string
        amenities:
          type: string
        chargerType:
          type: string
        chargingSiteType:
          type: string
        city:
          type: string
        connectors:
          type: string
        countryCode:
          type: string
        currencyCode:
          type: string
        district:
          type: string
        elevation:
          type: string
        entityCode:
          type: string
        entryLatitude:
          type: string
        entryLongitude:
          type: string
        expectedOpenDate:
          type: string
        fastchargedbId:
          type: string
        hasMSPPricing:
          type: boolean
        isDcEnforced:
          type: boolean
        landlordName:
          type: string
        landlordTaxId:
          type: string
        localizedName:
          type: string
        locationVerified:
          type: string
        maxPower:
          type: string
        name:
          type: string
        navInstructions:
          type: string
        nearestEntrance:
          type: string
        openToPublic:
          type: string
        parkingFeeDetails:
          type: string
        postalCode:
          type: string
        postalExt:
          type: string
        programType:
          type: string
        projectId:
          type: string
        publicStallCount:
          type: string
        qbName:
          type: string
        stateProvince:
          type: string
        timezone:
          type: string
        trtId:
          type: integer
    modelsv2.SiteInfoSaveRq:
      type: object
      properties:
        actual_latitude:
          type: string
        actual_longitude:
          type: string
        address_1:
          type: string
        address_2:
          type: string
        city:
          type: string
        country_code:
          type: string
        currency_code:
          type: string
        district:
          type: string
        entity_code:
          type: string
        entry_latitude:
          type: string
        entry_longitude:
          type: string
        event_table:
          type: string
        expected_open_date:
          type: string
        localized_name:
          type: string
        location_verified:
          type: string
        name:
          type: string
        nearest_entrance:
          type: string
        postal_code:
          type: string
        postal_ext:
          type: string
        project_id:
          type: integer
        site_access_type_id:
          type: string
        site_type_id:
          type: string
        state_province:
          type: string
        timezone:
          type: string
        trt_id:
          type: integer
    modelsv2.SitePricebook:
      type: object
      properties:
        currencyCode:
          type: string
        days:
          type: string
        effectiveDatetime:
          type: string
        endTime:
          type: string
        feeType:
          type: string
        isTou:
          type: boolean
        priceBookGUID:
          type: string
        priceBookID:
          type: integer
        programType:
          type: string
        rateBase:
          type: number
        rateMinTier1:
          type: string
        rateMinTier2:
          type: string
        rateMinTier3:
          type: string
        rateMinTier4:
          type: string
        rateTier1:
          type: number
        rateTier2:
          type: number
        startTime:
          type: string
        uom:
          type: string
        vehicleMakeType:
          type: string
    modelsv2.SitePricebooksRs:
      type: array
      items:
        type: object
        properties:
          currencyCode:
            type: string
          days:
            type: string
          effectiveDatetime:
            type: string
          endTime:
            type: string
          feeType:
            type: string
          isTou:
            type: boolean
          priceBookGUID:
            type: string
          priceBookID:
            type: integer
          programType:
            type: string
          rateBase:
            type: number
          rateMinTier1:
            type: string
          rateMinTier2:
            type: string
          rateMinTier3:
            type: string
          rateMinTier4:
            type: string
          rateTier1:
            type: number
          rateTier2:
            type: number
          startTime:
            type: string
          uom:
            type: string
          vehicleMakeType:
            type: string
    modelsv2.SitePricing:
      type: object
      properties:
        charge_uom:
          type: string
        days:
          type: string
        deleted_at:
          type: string
        deleted_by:
          type: string
        effective_datetime:
          type: string
        end_time:
          $ref: '#/components/schemas/timeutils.TimePart'
        fee_type_id:
          type: integer
        is_deleted:
          type: integer
        is_tou:
          type: string
        pricebook_guid:
          type: string
        pricebook_id:
          type: integer
        program_type:
          type: string
        rate_base:
          type: number
        rate_min_tier1:
          type: string
        rate_min_tier2:
          type: string
        rate_min_tier3:
          type: string
        rate_min_tier4:
          type: string
        rate_tier1:
          type: number
        rate_tier2:
          type: number
        site_pricing_id:
          type: integer
        start_time:
          $ref: '#/components/schemas/timeutils.TimePart'
        vehicle_make_type:
          type: string
    modelsv2.SitePricingAuditRs:
      type: object
      properties:
        mismatch_list:
          type: array
          items:
            type: integer
    modelsv2.SitePricingDbm:
      type: object
      properties:
        created_at:
          type: string
        created_by:
          type: string
        days:
          type: string
        deleted_at:
          type: string
        deleted_by:
          type: string
        effective_date_time:
          type: string
        end_time:
          $ref: '#/components/schemas/timeutils.TimePart'
        fee_type_id:
          type: integer
        hash_time:
          type: string
        is_deleted:
          type: string
        is_tou:
          type: string
        last_updated_at:
          type: string
        last_updated_by:
          type: string
        price_book_guid:
          type: string
        price_book_id:
          type: integer
        program_type:
          type: string
        published_to_hub_at:
          type: string
        rate_base:
          type: number
        rate_min_tier1:
          type: string
        rate_min_tier2:
          type: string
        rate_min_tier3:
          type: string
        rate_min_tier4:
          type: string
        rate_tier1:
          type: number
        rate_tier2:
          type: number
        site_id:
          type: integer
        site_pricing_id:
          type: integer
        start_time:
          $ref: '#/components/schemas/timeutils.TimePart'
        uom:
          type: string
        vehicle_make_type:
          type: string
    modelsv2.SitePricingSaveRq:
      type: object
      properties:
        price_book_guid:
          type: string
        price_book_id:
          type: integer
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.SitePricing'
        site_id:
          type: integer
        trt_id:
          type: integer
    modelsv2.SitePricings:
      type: object
      properties:
        country_code:
          type: string
        created_at:
          type: string
        created_by:
          type: string
        currency_code:
          type: string
        days:
          type: string
        deleted_at:
          type: string
        deleted_by:
          type: string
        effective_date_time:
          type: string
        end_time:
          $ref: '#/components/schemas/timeutils.TimePart'
        fee_type_id:
          type: integer
        hash_time:
          type: string
        is_deleted:
          type: string
        is_tou:
          type: string
        last_updated_at:
          type: string
        last_updated_by:
          type: string
        price_book_guid:
          type: string
        price_book_id:
          type: integer
        program_type:
          type: string
        published_to_hub_at:
          type: string
        rate_base:
          type: number
        rate_min_tier1:
          type: string
        rate_min_tier2:
          type: string
        rate_min_tier3:
          type: string
        rate_min_tier4:
          type: string
        rate_tier1:
          type: number
        rate_tier2:
          type: number
        site_id:
          type: integer
        site_pricing_id:
          type: integer
        start_time:
          $ref: '#/components/schemas/timeutils.TimePart'
        uom:
          type: string
        vehicle_make_type:
          type: string
    modelsv2.SiteTranslationDbm:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          type: string
        language:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        project_id:
          type: integer
        site_id:
          type: integer
        site_translation_id:
          type: integer
        translation:
          type: string
        translation_map:
          type: object
          properties: {}
    modelsv2.SiteVehiclePriceJSON:
      type: object
      properties:
        centroid:
          $ref: '#/components/schemas/modelsv2.JSONCoords'
        location_id:
          type: string
        name:
          type: string
        open_to_non_xxxs:
          type: boolean
        open_to_public:
          type: boolean
        rates:
          type: array
          items:
            $ref: '#/components/schemas/modelsv2.JSONRate'
        site_id:
          type: integer
        trt_id:
          type: integer
    modelsv2.StatementDBO:
      type: object
      properties:
        amountDue:
          type: number
        billingCycleID:
          type: string
        country:
          type: string
        csvDmsID:
          type: string
        currency:
          type: string
        documentRequestID:
          type: string
        dueDateUtc:
          type: string
        endDateUtc:
          type: string
        fileName:
          type: string
        generationDateUtc:
          type: string
        isArchive:
          type: string
        isArchived:
          type: integer
        language:
          type: string
        pdfDmsID:
          type: string
        processFlag:
          type: string
        startDateUtc:
          type: string
        statementGUID:
          type: string
        statementID:
          type: integer
        statementNumber:
          type: string
        taxAmount:
          type: string
        uid:
          type: integer
    modelsv2.StatementDetails:
      type: object
      properties:
        amount_due:
          type: string
        country_code:
          type: string
        csv_dms_id:
          type: string
        currency_code:
          type: string
        due_date:
          type: string
        end_date:
          type: string
        file_name:
          type: string
        generation_date:
          type: string
        language_code:
          type: string
        payment_status:
          type: string
        pdf_dms_id:
          type: string
        start_date:
          type: string
        statement_guid:
          type: string
        statement_id:
          type: integer
        statement_number:
          type: string
    modelsv2.StatementResponse:
      type: object
      properties:
        RequestId:
          type: string
        ResponseObject:
          $ref: '#/components/schemas/modelsv2.ResponseObject'
        Success:
          type: boolean
    modelsv2.Statements:
      type: object
      properties:
        amountDue:
          type: number
        country:
          type: string
        csvDmsId:
          type: string
        currency:
          type: string
        dueDateUtc:
          type: string
        endDateUtc:
          type: string
        generationDateUtc:
          type: string
        is_archived:
          type: integer
        language:
          type: string
        pdfDmsId:
          type: string
        pdfFileName:
          type: string
        startDateUtc:
          type: string
        statementGUID:
          type: string
    modelsv2.SurveySendRs:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/models.Error'
        processed:
          type: integer
        total:
          type: integer
    modelsv2.SurveyStatusUpdateRq:
      type: object
      properties:
        notificationStatus:
          type: string
        sessionId:
          type: integer
        uid:
          type: integer
    modelsv2.SurveySubmitRq:
      type: object
      properties:
        authSessionID:
          type: string
        metadata:
          type: object
          properties: {}
        requestedBy:
          type: string
        submissionKey:
          type: string
        uid:
          type: integer
        vin:
          type: string
    modelsv2.SyncSiteRs:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/models.Error'
        processed:
          type: integer
        total:
          type: integer
    modelsv2.T4BExportRequest:
      type: object
      properties:
        trtIds:
          type: array
          items:
            type: integer
    modelsv2.T4BHistoryExport:
      type: object
      properties:
        data:
          type: array
          items:
            type: integer
    modelsv2.TerminalAuthorizeRq:
      type: object
      properties:
        din:
          type: string
        serialNumber:
          type: string
        trtID:
          type: integer
    modelsv2.TerminalAuthorizeRs:
      type: object
      properties:
        sessionID:
          type: string
        status:
          type: string
        statusMessage:
          type: string
    modelsv2.TerminalRq:
      type: object
      properties:
        language:
          type: string
        qr:
          type: string
        serialNumber:
          type: string
        trtID:
          type: integer
        uiMessage:
          type: string
        uiMessageTimeout:
          type: integer
        waitTime:
          type: integer
    modelsv2.TerminalStartRq:
      type: object
      properties:
        amount:
          type: number
        language:
          type: string
        qr:
          type: string
        serialNumber:
          type: string
        trtID:
          type: integer
        uiMessage:
          type: string
        uiMessageTimeout:
          type: integer
        waitTime:
          type: integer
    modelsv2.UpdateExpiredRequestsRq:
      type: object
      properties:
        BatchSize:
          type: integer
        ParallelLevel:
          type: integer
        TimeoutInMinute:
          type: integer
        UpdatedBy:
          type: string
    modelsv2.UpdateFapiaoRequestRq:
      type: object
      properties:
        DmsUuid:
          type: string
        FapiaoRef:
          type: string
        Status:
          type: string
        UpdatedBy:
          type: string
    modelsv2.UpdateFapiaoStatusRq:
      type: array
      items:
        type: object
        properties:
          DmsUuid:
            type: string
          FapiaoRef:
            type: string
          Status:
            type: string
          UpdatedBy:
            type: string
    modelsv2.User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    modelsv2.UserCredit:
      type: object
      properties:
        availableCredit:
          type: number
        benefitType:
          type: string
        comments:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        creditId:
          type: integer
        creditTypeId:
          type: integer
        creditTypeUnit:
          type: string
        distanceUnit:
          type: string
        expiryDateTime:
          type: string
        inactive:
          type: boolean
        initDateTime:
          type: string
        initialCredit:
          type: number
        initialDistance:
          type: number
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        productId:
          type: string
        referenceNumber:
          type: string
        remainingDistance:
          type: number
        renewalDateTime:
          type: string
        uid:
          type: integer
        vehicleMapId:
          type: string
        vin:
          type: string
    modelsv2.UserEnabledRs:
      type: object
      properties:
        dlq:
          type: string
        enabled:
          type: boolean
        isChina:
          type: string
        siteCountryCode:
          type: string
        vehicleCountryCode:
          type: string
    modelsv2.UserValidated:
      type: object
      properties:
        enabled:
          type: boolean
        errors:
          type: array
          items:
            type: string
    modelsv2.UserVin:
      type: object
      properties:
        model:
          type: string
        vehicleMapId:
          type: string
        vin:
          type: string
    modelsv2.ValidInvoice:
      type: object
      properties:
        isValid:
          type: boolean
    modelsv2.Vehicle:
      type: object
      properties:
        countryCode:
          type: string
          description: VMAP Country Code
        currencyCode:
          type: string
          description: VMAP Currency Code
        deliveryDate:
          type: string
        isB2b:
          type: boolean
          description: VMAP IsB2b
        model:
          type: string
        optionCode:
          type: string
          description: SCO1, SC04, SC05, SC06
        orderDate:
          type: string
        payorAccounts:
          type: object
          properties: {}
          description: Handles Split Fees by FeeType
        status:
          type: string
          description: VMAP Status
        subStatus:
          type: string
          description: VMAP SubStatus
        vehicleID:
          type: integer
        vehicleMapID:
          type: integer
        vehicleType:
          type: string
          description: CUSTOMER, INVENTORY, ENGINEERING, ETC
        vin:
          type: string
    modelsv2.VehicleEnabledRs:
      type: object
      properties:
        enabled:
          type: boolean
    modelsv2.VehicleFlagsDbm:
      type: object
      properties:
        comments:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        disableSupercharger:
          type: string
        disabledReason:
          type: string
        lastUpdatedAt:
          type: string
        lastUpdatedBy:
          type: string
        paymentNeeded:
          type: string
        paymentReason:
          type: string
        vehicleFlagID:
          type: integer
        vin:
          type: string
    modelsv2.VehicleFlagsRs:
      type: object
      properties:
        PaymentMethod:
          type: string
          enum:
            - DEFAULT
            - MSP_CARD
        PaymentNeeded:
          type: boolean
        Reason:
          type: string
        SuperchargerDisabled:
          type: boolean
        Vin:
          type: string
    modelsv2.VinList:
      type: array
      items:
        type: object
        properties:
          model:
            type: string
          vehicleMapId:
            type: string
          vin:
            type: string
    modelsv2.ADHOCStartSessionRq:
      type: object
      properties:
        authSessionId:
          type: string
        locationId:
          type: string
        postId:
          type: string
        authType:
          type: string
        programType:
          type: string
        transactionNumber:
          type: string
        flowType:
          type: string
        uid:
          type: integer
    ocpigtwy.PutLocationsResp:
      type: object
      properties:
        sucessfulLocations:
          type: array
          items:
            type: string
    payterpgw.Error:
      type: object
      properties:
        code:
          type: integer
        errMessage:
          type: string
        message:
          type: string
        payterErr:
          $ref: '#/components/schemas/payterpgw.PayterErr'
    payterpgw.PayterErr:
      type: object
      properties:
        decision:
          type: string
        description:
          type: string
        errorCode:
          type: string
        hostUrl:
          type: string
        httpStatus:
          type: string
        moreInfo:
          type: string
        payXResponseCode:
          type: string
        reasonCode:
          type: string
        reasonDescription:
          type: string
        responseMessage:
          type: string
        transactionNumber:
          type: string
    payterpgw.TerminalRs:
      type: object
      properties:
        aid:
          type: string
        amount:
          type: number
        cardId:
          type: string
        decision:
          type: string
        ifd:
          type: string
        maskedPan:
          type: string
        serialNumber:
          type: string
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/payterpgw.terminalSessions'
        uiMessage:
          type: string
        uiMessageTimeout:
          type: integer
        waitTime:
          type: integer
    payterpgw.TerminalUIRq:
      type: object
      properties:
        id:
          type: string
        properties:
          type: object
          properties: {}
        serialNumber:
          type: string
        trtID:
          type: integer
        type:
          type: string
    payterpgw.terminalSessions:
      type: object
      properties:
        authorizationCode:
          type: string
        authorizationHostReference:
          type: string
        authorizationHostResult:
          type: string
        authorizationResponseCode:
          type: string
        authorizedAmount:
          type: number
        brand:
          type: string
        cardId:
          type: string
        commitTime:
          type: string
        emvDate:
          type: string
        emvTime:
          type: string
        finalAmount:
          type: integer
        merchantReference:
          type: string
        receiptInfo:
          type: array
          items:
            type: string
        result:
          type: string
        sessionId:
          type: string
        state:
          type: string
        terminalTxnId:
          type: integer
        tid:
          type: string
        transactionTime:
          type: string
    protos.EnvelopeSummary:
      type: object
      properties:
        pricebooks:
          type: array
          items:
            $ref: '#/components/schemas/protos.PricebookSummary'
        sizeCache:
          type: string
        state:
          type: string
        trt_id:
          type: integer
        unknownFields:
          type: string
    protos.PricebookEnvelope:
      type: object
      properties:
        data:
          type: array
          description: data will be base64 encoded string passed along to the SMC
          items:
            type: integer
        sizeCache:
          type: string
        state:
          type: string
        summary:
          $ref: '#/components/schemas/protos.EnvelopeSummary'
        unknownFields:
          type: string
    protos.PricebookSummary:
      type: object
      properties:
        effective_date:
          type: string
        is_effective:
          type: boolean
        pricebook_id:
          type: integer
        program_type:
          type: string
        sizeCache:
          type: string
        state:
          type: string
        unknownFields:
          type: string
        vehicle_type:
          type: string
    timeutils.TimePart:
      type: object
  securitySchemes:
    ADFS Token:
      type: apiKey
      name: AuthToken
      in: header
    ApiClientId:
      type: apiKey
      name: x-client-id
      in: header
    ApiClientKey:
      type: apiKey
      name: authorization
      in: header