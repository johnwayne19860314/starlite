// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateMultipleEntries implements pgx.CopyFromSource.
type iteratorForCreateMultipleEntries struct {
	rows                 []CreateMultipleEntriesParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateMultipleEntries) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateMultipleEntries) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].EntryCode,
		r.rows[0].EntryCategory,
		r.rows[0].EntryName,
		r.rows[0].EntryAmount,
		r.rows[0].EntryWeight,
		r.rows[0].EntryNote,
		r.rows[0].IsActive,
	}, nil
}

func (r iteratorForCreateMultipleEntries) Err() error {
	return nil
}

func (q *Queries) CreateMultipleEntries(ctx context.Context, arg []CreateMultipleEntriesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"first", "entry"}, []string{"entry_code", "entry_category", "entry_name", "entry_amount", "entry_weight", "entry_note", "is_active"}, &iteratorForCreateMultipleEntries{rows: arg})
}
